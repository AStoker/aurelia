(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./quick-start", "@aurelia/debug", "@aurelia/fetch-client", "@aurelia/jit", "@aurelia/jit-html-browser", "@aurelia/kernel", "@aurelia/router", "@aurelia/runtime", "@aurelia/runtime-html"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var quick_start_1 = require("./quick-start");
    Object.defineProperty(exports, "Aurelia", { enumerable: true, get: function () { return quick_start_1.Aurelia; } });
    Object.defineProperty(exports, "default", { enumerable: true, get: function () { return quick_start_1.Aurelia; } });
    var debug_1 = require("@aurelia/debug");
    Object.defineProperty(exports, "DebugConfiguration", { enumerable: true, get: function () { return debug_1.DebugConfiguration; } });
    Object.defineProperty(exports, "TraceConfiguration", { enumerable: true, get: function () { return debug_1.TraceConfiguration; } });
    var fetch_client_1 = require("@aurelia/fetch-client");
    // RetryConfiguration,
    // RetryableRequest,
    // ValidInterceptorMethodName,
    Object.defineProperty(exports, "json", { enumerable: true, get: function () { return fetch_client_1.json; } });
    // retryStrategy,
    // RetryInterceptor,
    Object.defineProperty(exports, "HttpClientConfiguration", { enumerable: true, get: function () { return fetch_client_1.HttpClientConfiguration; } });
    Object.defineProperty(exports, "HttpClient", { enumerable: true, get: function () { return fetch_client_1.HttpClient; } });
    var jit_1 = require("@aurelia/jit");
    // AttrSyntax,
    // IAttributeParser,
    Object.defineProperty(exports, "attributePattern", { enumerable: true, get: function () { return jit_1.attributePattern; } });
    // AttributePatternDefinition,
    Object.defineProperty(exports, "IAttributePattern", { enumerable: true, get: function () { return jit_1.IAttributePattern; } });
    // IAttributePatternHandler,
    // Interpretation,
    // ISyntaxInterpreter,
    // AtPrefixedTriggerAttributePattern,
    // ColonPrefixedBindAttributePattern,
    // DotSeparatedAttributePattern,
    // RefAttributePattern,
    Object.defineProperty(exports, "bindingCommand", { enumerable: true, get: function () { return jit_1.bindingCommand; } });
    // BindingCommandDefinition,
    // BindingCommandKind,
    // BindingCommandType,
    Object.defineProperty(exports, "getTarget", { enumerable: true, get: function () { return jit_1.getTarget; } });
    // CallBindingCommand,
    // DefaultBindingCommand,
    // ForBindingCommand,
    // FromViewBindingCommand,
    // OneTimeBindingCommand,
    // ToViewBindingCommand,
    // TwoWayBindingCommand,
    // IExpressionParserRegistration,
    // DefaultComponents as JitDefaultComponents,
    // RefAttributePatternRegistration,
    // DotSeparatedAttributePatternRegistration,
    // DefaultBindingSyntax,
    // AtPrefixedTriggerAttributePatternRegistration,
    // ColonPrefixedBindAttributePatternRegistration,
    Object.defineProperty(exports, "ShortHandBindingSyntax", { enumerable: true, get: function () { return jit_1.ShortHandBindingSyntax; } });
    var jit_html_browser_1 = require("@aurelia/jit-html-browser");
    Object.defineProperty(exports, "JitHtmlBrowserConfiguration", { enumerable: true, get: function () { return jit_html_browser_1.JitHtmlBrowserConfiguration; } });
    var kernel_1 = require("@aurelia/kernel");
    Object.defineProperty(exports, "all", { enumerable: true, get: function () { return kernel_1.all; } });
    Object.defineProperty(exports, "DI", { enumerable: true, get: function () { return kernel_1.DI; } });
    Object.defineProperty(exports, "IContainer", { enumerable: true, get: function () { return kernel_1.IContainer; } });
    // IDefaultableInterfaceSymbol,
    // IFactory,
    Object.defineProperty(exports, "inject", { enumerable: true, get: function () { return kernel_1.inject; } });
    Object.defineProperty(exports, "IServiceLocator", { enumerable: true, get: function () { return kernel_1.IServiceLocator; } });
    Object.defineProperty(exports, "lazy", { enumerable: true, get: function () { return kernel_1.lazy; } });
    Object.defineProperty(exports, "optional", { enumerable: true, get: function () { return kernel_1.optional; } });
    // RegisterSelf,
    Object.defineProperty(exports, "Registration", { enumerable: true, get: function () { return kernel_1.Registration; } });
    // ResolveCallback,
    Object.defineProperty(exports, "singleton", { enumerable: true, get: function () { return kernel_1.singleton; } });
    Object.defineProperty(exports, "transient", { enumerable: true, get: function () { return kernel_1.transient; } });
    // Injectable,
    // InterfaceSymbol,
    Object.defineProperty(exports, "InstanceProvider", { enumerable: true, get: function () { return kernel_1.InstanceProvider; } });
    // IPerformance,
    // ITimerHandler,
    // IWindowOrWorkerGlobalScope,
    // KnownKeys,
    // NoInfer,
    // Omit,
    // OptionalKnownKeys,
    // OptionalValuesOf,
    // Overwrite,
    // Param0,
    // Param1,
    // Param2,
    // Param3,
    // Pick2,
    // Pick3,
    // Primitive,
    // Public,
    // Purify,
    // RequiredKnownKeys,
    // RequiredValuesOf,
    // StrictPrimitive,
    // Unwrap,
    // ValuesOf,
    // Writable,
    // IfEquals,
    // ReadonlyKeys,
    // WritableKeys,
    // metadata,
    Object.defineProperty(exports, "Metadata", { enumerable: true, get: function () { return kernel_1.Metadata; } });
    // IConsoleLike,
    Object.defineProperty(exports, "ColorOptions", { enumerable: true, get: function () { return kernel_1.ColorOptions; } });
    // ILogConfig,
    // ILogEvent,
    // ILogEventFactory,
    // ISink,
    Object.defineProperty(exports, "ILogger", { enumerable: true, get: function () { return kernel_1.ILogger; } });
    // LogConfig,
    // DefaultLogEvent,
    // DefaultLogEventFactory,
    // DefaultLogger,
    // ConsoleSink,
    Object.defineProperty(exports, "LoggerConfiguration", { enumerable: true, get: function () { return kernel_1.LoggerConfiguration; } });
    // relativeToFile,
    // join,
    // parseQueryString,
    // IQueryParams,
    Object.defineProperty(exports, "PLATFORM", { enumerable: true, get: function () { return kernel_1.PLATFORM; } });
    // ITraceInfo,
    // ITraceWriter,
    // ILiveLoggingOptions,
    Object.defineProperty(exports, "Reporter", { enumerable: true, get: function () { return kernel_1.Reporter; } });
    Object.defineProperty(exports, "Tracer", { enumerable: true, get: function () { return kernel_1.Tracer; } });
    Object.defineProperty(exports, "LogLevel", { enumerable: true, get: function () { return kernel_1.LogLevel; } });
    Object.defineProperty(exports, "Profiler", { enumerable: true, get: function () { return kernel_1.Profiler; } });
    // IResourceDefinition,
    // IResourceDescriptions,
    // IResourceKind,
    // IResourceType,
    // ResourceDescription,
    // ResourcePartDescription,
    // fromAnnotationOrDefinitionOrTypeOrDefault,
    // fromAnnotationOrTypeOrDefault,
    // fromDefinitionOrDefault,
    Object.defineProperty(exports, "EventAggregator", { enumerable: true, get: function () { return kernel_1.EventAggregator; } });
    Object.defineProperty(exports, "IEventAggregator", { enumerable: true, get: function () { return kernel_1.IEventAggregator; } });
    Object.defineProperty(exports, "isArrayIndex", { enumerable: true, get: function () { return kernel_1.isArrayIndex; } });
    Object.defineProperty(exports, "camelCase", { enumerable: true, get: function () { return kernel_1.camelCase; } });
    Object.defineProperty(exports, "kebabCase", { enumerable: true, get: function () { return kernel_1.kebabCase; } });
    Object.defineProperty(exports, "pascalCase", { enumerable: true, get: function () { return kernel_1.pascalCase; } });
    Object.defineProperty(exports, "toArray", { enumerable: true, get: function () { return kernel_1.toArray; } });
    // nextId,
    // resetId,
    // compareNumber,
    // mergeDistinct,
    // isNumberOrBigInt,
    // isStringOrDate,
    Object.defineProperty(exports, "bound", { enumerable: true, get: function () { return kernel_1.bound; } });
    var router_1 = require("@aurelia/router");
    // Nav,
    Object.defineProperty(exports, "NavRoute", { enumerable: true, get: function () { return router_1.NavRoute; } });
    // IStoredNavigatorEntry,
    // INavigatorEntry,
    // INavigatorOptions,
    // INavigatorFlags,
    // INavigatorState,
    // INavigatorStore,
    // INavigatorViewer,
    // INavigatorViewerEvent,
    // Navigator,
    // QueueItem,
    // IQueueOptions,
    // Queue,
    // RouteHandler,
    // ConfigurableRoute,
    // HandlerEntry,
    // RouteGenerator,
    // TypesRecord,
    // RecognizeResult,
    // RecognizeResults,
    // CharSpec,
    // // State as RouterState, // duplicated in @aurelia/runtime
    // StaticSegment,
    // DynamicSegment,
    // StarSegment,
    // EpsilonSegment,
    // Segment,
    // RouteRecognizer,
    Object.defineProperty(exports, "RouterOptions", { enumerable: true, get: function () { return router_1.RouterOptions; } });
    Object.defineProperty(exports, "IRouter", { enumerable: true, get: function () { return router_1.IRouter; } });
    Object.defineProperty(exports, "Router", { enumerable: true, get: function () { return router_1.Router; } });
    // IViewportOptions,
    // Viewport,
    // ContentStatus,
    // ViewportContent,
    Object.defineProperty(exports, "ViewportInstruction", { enumerable: true, get: function () { return router_1.ViewportInstruction; } });
    Object.defineProperty(exports, "RouterConfiguration", { enumerable: true, get: function () { return router_1.RouterConfiguration; } });
    Object.defineProperty(exports, "RouterRegistration", { enumerable: true, get: function () { return router_1.RouterRegistration; } });
    var runtime_1 = require("@aurelia/runtime");
    // CallFunctionExpression,
    // connects,
    // observes,
    // callsFunction,
    // hasAncestor,
    // isAssignable,
    // isLeftHandSide,
    // isPrimary,
    // isResource,
    // hasBind,
    // hasUnbind,
    // isLiteral,
    // arePureLiterals,
    // isPureLiteral,
    // CustomExpression,
    // BindingBehaviorExpression,
    // ValueConverterExpression,
    // AssignExpression,
    // ConditionalExpression,
    // AccessThisExpression,
    // AccessScopeExpression,
    // AccessMemberExpression,
    // AccessKeyedExpression,
    // CallScopeExpression,
    // CallMemberExpression,
    // BinaryExpression,
    // UnaryExpression,
    // PrimitiveLiteralExpression,
    // HtmlLiteralExpression,
    // ArrayLiteralExpression,
    // ObjectLiteralExpression,
    // TemplateExpression,
    // TaggedTemplateExpression,
    // ArrayBindingPattern,
    // ObjectBindingPattern,
    // BindingIdentifier,
    // ForOfStatement,
    // Interpolation,
    // AnyBindingExpression,
    // IsPrimary,
    // IsLiteral,
    // IsLeftHandSide,
    // IsUnary,
    // IsBinary,
    // IsConditional,
    // IsAssign,
    // IsValueConverter,
    // IsBindingBehavior,
    // IsAssignable,
    // IsExpression,
    // IsExpressionOrStatement,
    // Connects,
    // Observes,
    // CallsFunction,
    // IsResource,
    // HasBind,
    // HasUnbind,
    // HasAncestor,
    // IVisitor,
    // IExpression,
    // IAccessKeyedExpression,
    // IAccessMemberExpression,
    // IAccessScopeExpression,
    // IAccessThisExpression,
    // IArrayBindingPattern,
    // IArrayLiteralExpression,
    // IAssignExpression,
    // IBinaryExpression,
    // IBindingBehaviorExpression,
    // IBindingIdentifier,
    // ICallFunctionExpression,
    // ICallMemberExpression,
    // ICallScopeExpression,
    // IConditionalExpression,
    // IForOfStatement,
    // IHtmlLiteralExpression,
    // IInterpolationExpression,
    // IObjectBindingPattern,
    // IObjectLiteralExpression,
    // IPrimitiveLiteralExpression,
    // ITaggedTemplateExpression,
    // ITemplateExpression,
    // IUnaryExpression,
    // IValueConverterExpression,
    // BinaryOperator,
    // BindingIdentifierOrPattern,
    // UnaryOperator,
    // PropertyBinding,
    // CallBinding,
    // IPartialConnectableBinding,
    // IConnectableBinding,
    // connectable,
    // IExpressionParser,
    // BindingType,
    // MultiInterpolationBinding,
    // InterpolationBinding,
    // LetBinding,
    // RefBinding,
    // ArrayObserver,
    // enableArrayObservation,
    // disableArrayObservation,
    // applyMutationsToIndices,
    // synchronizeIndices,
    // MapObserver,
    // enableMapObservation,
    // disableMapObservation,
    // SetObserver,
    // enableSetObservation,
    // disableSetObservation,
    // BindingContext,
    // Scope,
    // OverrideContext,
    // CollectionLengthObserver,
    // CollectionSizeObserver,
    // ComputedOverrides,
    // ComputedLookup,
    Object.defineProperty(exports, "computed", { enumerable: true, get: function () { return runtime_1.computed; } });
    // createComputedObserver,
    // CustomSetterObserver,
    // GetterObserver,
    // IDirtyChecker,
    // DirtyCheckProperty,
    // DirtyCheckSettings,
    // IObjectObservationAdapter,
    Object.defineProperty(exports, "IObserverLocator", { enumerable: true, get: function () { return runtime_1.IObserverLocator; } });
    // ITargetObserverLocator,
    // ITargetAccessorLocator,
    // getCollectionObserver,
    // ObserverLocator,
    // PrimitiveObserver,
    // PropertyAccessor,
    // ProxyObserver,
    // BindableObserver,
    // SetterObserver,
    Object.defineProperty(exports, "ISignaler", { enumerable: true, get: function () { return runtime_1.ISignaler; } });
    Object.defineProperty(exports, "subscriberCollection", { enumerable: true, get: function () { return runtime_1.subscriberCollection; } });
    Object.defineProperty(exports, "collectionSubscriberCollection", { enumerable: true, get: function () { return runtime_1.collectionSubscriberCollection; } });
    Object.defineProperty(exports, "proxySubscriberCollection", { enumerable: true, get: function () { return runtime_1.proxySubscriberCollection; } });
    Object.defineProperty(exports, "bindingBehavior", { enumerable: true, get: function () { return runtime_1.bindingBehavior; } });
    Object.defineProperty(exports, "BindingBehavior", { enumerable: true, get: function () { return runtime_1.BindingBehavior; } });
    // PartialBindingBehaviorDefinition,
    // BindingBehaviorKind,
    // BindingBehaviorDecorator,
    // BindingBehaviorInstance,
    // BindingBehaviorType,
    // BindingModeBehavior,
    // OneTimeBindingBehavior,
    // ToViewBindingBehavior,
    // FromViewBindingBehavior,
    // TwoWayBindingBehavior,
    // DebounceBindingBehavior,
    // SignalableBinding,
    // SignalBindingBehavior,
    // ThrottleBindingBehavior,
    Object.defineProperty(exports, "customAttribute", { enumerable: true, get: function () { return runtime_1.customAttribute; } });
    // CustomAttributeDecorator,
    Object.defineProperty(exports, "CustomAttribute", { enumerable: true, get: function () { return runtime_1.CustomAttribute; } });
    // CustomAttributeDefinition
    // CustomAttributeKind,
    // CustomAttributeType,
    // PartialCustomAttributeDefinition,
    Object.defineProperty(exports, "templateController", { enumerable: true, get: function () { return runtime_1.templateController; } });
    // FrequentMutations,
    // InfrequentMutations,
    // ObserveShallow,
    // If,
    // Else,
    // Repeat,
    // Replaceable,
    // With,
    Object.defineProperty(exports, "containerless", { enumerable: true, get: function () { return runtime_1.containerless; } });
    Object.defineProperty(exports, "customElement", { enumerable: true, get: function () { return runtime_1.customElement; } });
    Object.defineProperty(exports, "CustomElement", { enumerable: true, get: function () { return runtime_1.CustomElement; } });
    // CustomElementDecorator,
    // CustomElementKind,
    // CustomElementType,
    // CustomElementDefinition,
    // PartialCustomElementDefinition,
    // IElementProjector,
    // IProjectorLocator,
    Object.defineProperty(exports, "useShadowDOM", { enumerable: true, get: function () { return runtime_1.useShadowDOM; } });
    Object.defineProperty(exports, "ValueConverter", { enumerable: true, get: function () { return runtime_1.ValueConverter; } });
    // ValueConverterType,
    Object.defineProperty(exports, "valueConverter", { enumerable: true, get: function () { return runtime_1.valueConverter; } });
    // ISanitizer,
    // SanitizeValueConverter,
    // ViewValueConverter,
    // Clock,
    // IClock,
    // IClockSettings,
    Object.defineProperty(exports, "IScheduler", { enumerable: true, get: function () { return runtime_1.IScheduler; } });
    // ITask,
    // ITaskQueue,
    // QueueTaskOptions,
    // Task,
    // TaskAbortError,
    // TaskCallback,
    // TaskQueue,
    Object.defineProperty(exports, "TaskQueuePriority", { enumerable: true, get: function () { return runtime_1.TaskQueuePriority; } });
    // TaskStatus,
    // QueueTaskTargetOptions,
    Object.defineProperty(exports, "bindable", { enumerable: true, get: function () { return runtime_1.bindable; } });
    // PartialBindableDefinition,
    // BindableDefinition,
    Object.defineProperty(exports, "Bindable", { enumerable: true, get: function () { return runtime_1.Bindable; } });
    // PartialChildrenDefinition,
    // ChildrenDefinition,
    // Children,
    Object.defineProperty(exports, "children", { enumerable: true, get: function () { return runtime_1.children; } });
    // These exports are temporary until we have a proper way to unit test them
    Object.defineProperty(exports, "Controller", { enumerable: true, get: function () { return runtime_1.Controller; } });
    Object.defineProperty(exports, "ViewFactory", { enumerable: true, get: function () { return runtime_1.ViewFactory; } });
    // IViewLocator,
    // ViewLocator,
    // view,
    // Views,
    // Aurelia, // Replaced by quick-start wrapper
    // IDOMInitializer,
    // ISinglePageApp,
    Object.defineProperty(exports, "CompositionRoot", { enumerable: true, get: function () { return runtime_1.CompositionRoot; } });
    // IfRegistration,
    // ElseRegistration,
    // RepeatRegistration,
    // ReplaceableRegistration,
    // WithRegistration,
    // SanitizeValueConverterRegistration,
    // DebounceBindingBehaviorRegistration,
    // OneTimeBindingBehaviorRegistration,
    // ToViewBindingBehaviorRegistration,
    // FromViewBindingBehaviorRegistration,
    // SignalBindingBehaviorRegistration,
    // ThrottleBindingBehaviorRegistration,
    // TwoWayBindingBehaviorRegistration,
    // RefBindingRendererRegistration,
    // CallBindingRendererRegistration,
    // CustomAttributeRendererRegistration,
    // CustomElementRendererRegistration,
    // InterpolationBindingRendererRegistration,
    // IteratorBindingRendererRegistration,
    // LetElementRendererRegistration,
    // PropertyBindingRendererRegistration,
    // SetPropertyRendererRegistration,
    // TemplateControllerRendererRegistration,
    // DefaultResources as RuntimeDefaultResources,
    // IObserverLocatorRegistration,
    // ILifecycleRegistration,
    // IRendererRegistration,
    // RuntimeConfiguration,
    // AttributeInstruction,
    // HooksDefinition,
    // ICallBindingInstruction,
    // IHydrateAttributeInstruction,
    // IHydrateElementInstruction,
    // IHydrateLetElementInstruction,
    // IHydrateTemplateController,
    // IInterpolationInstruction,
    // IIteratorBindingInstruction,
    // ILetBindingInstruction,
    // InstructionRow,
    // InstructionTypeName,
    // IPropertyBindingInstruction,
    // IRefBindingInstruction,
    // ISetPropertyInstruction,
    // isTargetedInstruction,
    // ITargetedInstruction,
    // NodeInstruction,
    // TargetedInstruction,
    // TargetedInstructionType,
    // PartialCustomElementDefinitionParts,
    Object.defineProperty(exports, "alias", { enumerable: true, get: function () { return runtime_1.alias; } });
    Object.defineProperty(exports, "registerAliases", { enumerable: true, get: function () { return runtime_1.registerAliases; } });
    // DOM, should expose the one exported in runtime-html
    Object.defineProperty(exports, "INode", { enumerable: true, get: function () { return runtime_1.INode; } });
    Object.defineProperty(exports, "IRenderLocation", { enumerable: true, get: function () { return runtime_1.IRenderLocation; } });
    Object.defineProperty(exports, "IDOM", { enumerable: true, get: function () { return runtime_1.IDOM; } });
    // NodeSequence,
    // INodeSequence,
    // INodeSequenceFactory,
    Object.defineProperty(exports, "BindingMode", { enumerable: true, get: function () { return runtime_1.BindingMode; } });
    Object.defineProperty(exports, "BindingStrategy", { enumerable: true, get: function () { return runtime_1.BindingStrategy; } });
    // ExpressionKind,
    // Hooks,
    Object.defineProperty(exports, "LifecycleFlags", { enumerable: true, get: function () { return runtime_1.LifecycleFlags; } });
    // State,
    // CallBindingInstruction,
    // FromViewBindingInstruction,
    // HydrateAttributeInstruction,
    // HydrateElementInstruction,
    // HydrateTemplateController,
    // InterpolationInstruction,
    // IteratorBindingInstruction,
    // LetBindingInstruction,
    // LetElementInstruction,
    // OneTimeBindingInstruction,
    // RefBindingInstruction,
    // SetPropertyInstruction,
    // ToViewBindingInstruction,
    // TwoWayBindingInstruction,
    // ViewModelKind,
    // IBinding,
    Object.defineProperty(exports, "ILifecycle", { enumerable: true, get: function () { return runtime_1.ILifecycle; } });
    // IObservable,
    // IObservedArray,
    // IObservedMap,
    // IObservedSet,
    // IOverrideContext,
    // IPropertyChangeTracker,
    // IPropertyObserver,
    // IScope,
    // ISubscribable,
    // ISubscriberCollection,
    // ObservedCollection,
    // ObserversLookup,
    // PropertyObserver,
    // CollectionObserver,
    // ICollectionSubscriberCollection,
    // IProxyObserver,
    // IProxy,
    // IProxySubscribable,
    // IProxySubscriber,
    // IProxySubscriberCollection,
    // ICollectionSubscribable,
    // ISubscriber,
    // isIndexMap,
    // copyIndexMap,
    // cloneIndexMap,
    // createIndexMap,
    Object.defineProperty(exports, "instructionRenderer", { enumerable: true, get: function () { return runtime_1.instructionRenderer; } });
    Object.defineProperty(exports, "ensureExpression", { enumerable: true, get: function () { return runtime_1.ensureExpression; } });
    var runtime_html_1 = require("@aurelia/runtime-html");
    // Listener,
    // AttributeBinding,
    // AttributeNSAccessor,
    // IInputElement,
    // CheckedObserver,
    // ClassAttributeAccessor,
    // DataAttributeAccessor,
    // ElementPropertyAccessor,
    // IManagedEvent,
    // ListenerTracker,
    // DelegateOrCaptureSubscription,
    // TriggerSubscription,
    // IElementConfiguration,
    // IEventManager,
    // IEventSubscriber,
    // IEventTargetWithLookups,
    // EventSubscriber,
    // EventSubscription,
    // EventManager,
    // TargetAccessorLocator,
    // TargetObserverLocator,
    // ISelectElement,
    // IOptionElement,
    // SelectValueObserver,
    // StyleAttributeAccessor,
    // ISVGAnalyzer,
    // ValueAttributeObserver,
    // AttrBindingBehavior,
    // SelfableBinding,
    // SelfBindingBehavior,
    // UpdateTriggerBindingBehavior,
    // UpdateTriggerableBinding,
    // UpdateTriggerableObserver,
    // Blur,
    // BlurManager,
    // Focus,
    // Portal,
    // PortalTarget,
    // PortalLifecycleCallback,
    // Subject,
    // Compose,
    // IProjectorLocatorRegistration,
    // ITargetAccessorLocatorRegistration,
    // ITargetObserverLocatorRegistration,
    // ITemplateFactoryRegistration,
    // DefaultComponents as RuntimeHtmlDefaultComponents,
    // AttrBindingBehaviorRegistration,
    // SelfBindingBehaviorRegistration,
    // UpdateTriggerBindingBehaviorRegistration,
    // ComposeRegistration,
    // DefaultResources as RuntimeHtmlDefaultResources,
    // AttributeBindingRendererRegistration,
    // ListenerBindingRendererRegistration,
    // SetAttributeRendererRegistration,
    // SetClassAttributeRendererRegistration,
    // SetStyleAttributeRendererRegistration,
    // StylePropertyBindingRendererRegistration,
    // TextBindingRendererRegistration,
    // DefaultRenderers,
    // RuntimeHtmlConfiguration,
    Object.defineProperty(exports, "createElement", { enumerable: true, get: function () { return runtime_html_1.createElement; } });
    // RenderPlan,
    // HTMLAttributeInstruction,
    // HTMLInstructionRow,
    // HTMLNodeInstruction,
    // HTMLTargetedInstruction,
    // HTMLTargetedInstructionType,
    // IAttributeBindingInstruction,
    // IListenerBindingInstruction,
    // ISetAttributeInstruction,
    // isHTMLTargetedInstruction,
    // IStylePropertyBindingInstruction,
    // ITextBindingInstruction,
    // NodeType,
    Object.defineProperty(exports, "HTMLDOM", { enumerable: true, get: function () { return runtime_html_1.HTMLDOM; } });
    Object.defineProperty(exports, "DOM", { enumerable: true, get: function () { return runtime_html_1.DOM; } });
    // NodeSequenceFactory,
    // FragmentNodeSequence,
    // AttributeBindingInstruction,
    // CaptureBindingInstruction,
    // DelegateBindingInstruction,
    // SetAttributeInstruction,
    // SetClassAttributeInstruction,
    // SetStyleAttributeInstruction,
    // StylePropertyBindingInstruction,
    // TextBindingInstruction,
    // TriggerBindingInstruction,
    // ContainerlessProjector,
    // HostProjector,
    // HTMLProjectorLocator,
    // ShadowDOMProjector,
    Object.defineProperty(exports, "StyleConfiguration", { enumerable: true, get: function () { return runtime_html_1.StyleConfiguration; } });
    // CSSModulesProcessorRegistry,
    Object.defineProperty(exports, "cssModules", { enumerable: true, get: function () { return runtime_html_1.cssModules; } });
    // ShadowDOMRegistry,
    // IShadowDOMStyleFactory,
    Object.defineProperty(exports, "shadowCSS", { enumerable: true, get: function () { return runtime_html_1.shadowCSS; } });
});
//# sourceMappingURL=index.js.map
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@aurelia/kernel", "@aurelia/platform", "./binding-behaviors/binding-mode", "./binding-behaviors/debounce", "./binding-behaviors/signals", "./binding-behaviors/throttle", "./alias", "./binding/ast", "./binding/property-binding", "./binding/call-binding", "./binding/connectable", "./binding/expression-parser", "./binding/interpolation-binding", "./binding/let-binding", "./binding/ref-binding", "./observation/array-observer", "./observation/map-observer", "./observation/set-observer", "./observation/binding-context", "./observation/collection-length-observer", "./observation/collection-size-observer", "./observation/computed-observer", "./observation/dirty-checker", "./observation/observable", "./observation/observer-locator", "./observation/primitive-observer", "./observation/property-accessor", "./observation/bindable-observer", "./observation/setter-observer", "./observation/signaler", "./observation/subscriber-collection", "./binding-behavior", "./binding-behaviors/binding-mode", "./binding-behaviors/debounce", "./binding-behaviors/signals", "./binding-behaviors/throttle", "./value-converter", "./bindable", "./observation"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createIndexMap = exports.cloneIndexMap = exports.copyIndexMap = exports.isIndexMap = exports.DelegationStrategy = exports.CollectionKind = exports.AccessorType = exports.ILifecycle = exports.LifecycleFlags = exports.BindingMode = exports.Bindable = exports.BindableDefinition = exports.bindable = exports.valueConverter = exports.ValueConverterDefinition = exports.ValueConverter = exports.ThrottleBindingBehavior = exports.SignalBindingBehavior = exports.DebounceBindingBehavior = exports.TwoWayBindingBehavior = exports.FromViewBindingBehavior = exports.ToViewBindingBehavior = exports.OneTimeBindingBehavior = exports.BindingModeBehavior = exports.BindingBehaviorStrategy = exports.BindingBehaviorFactory = exports.BindingInterceptor = exports.BindingBehaviorDefinition = exports.BindingBehavior = exports.bindingBehavior = exports.collectionSubscriberCollection = exports.subscriberCollection = exports.ISignaler = exports.SetterObserver = exports.BindableObserver = exports.PropertyAccessor = exports.PrimitiveObserver = exports.ObserverLocator = exports.getCollectionObserver = exports.INodeObserverLocator = exports.IObserverLocator = exports.observable = exports.DirtyCheckSettings = exports.DirtyCheckProperty = exports.IDirtyChecker = exports.GetterObserver = exports.CustomSetterObserver = exports.createComputedObserver = exports.computed = exports.CollectionSizeObserver = exports.CollectionLengthObserver = exports.OverrideContext = exports.Scope = exports.BindingContext = exports.disableSetObservation = exports.enableSetObservation = exports.SetObserver = exports.disableMapObservation = exports.enableMapObservation = exports.MapObserver = exports.synchronizeIndices = exports.applyMutationsToIndices = exports.disableArrayObservation = exports.enableArrayObservation = exports.ArrayIndexObserver = exports.ArrayObserver = exports.RefBinding = exports.LetBinding = exports.InterpolationBinding = exports.ContentBinding = exports.ParserState = exports.parse = exports.Precedence = exports.Access = exports.Char = exports.parseExpression = exports.BindingType = exports.IExpressionParser = exports.BindingMediator = exports.connectable = exports.CallBinding = exports.PropertyBinding = exports.Interpolation = exports.ForOfStatement = exports.BindingIdentifier = exports.ObjectBindingPattern = exports.ArrayBindingPattern = exports.TaggedTemplateExpression = exports.TemplateExpression = exports.ObjectLiteralExpression = exports.ArrayLiteralExpression = exports.HtmlLiteralExpression = exports.PrimitiveLiteralExpression = exports.UnaryExpression = exports.BinaryExpression = exports.CallMemberExpression = exports.CallScopeExpression = exports.AccessKeyedExpression = exports.AccessMemberExpression = exports.AccessScopeExpression = exports.AccessThisExpression = exports.ConditionalExpression = exports.AssignExpression = exports.ValueConverterExpression = exports.BindingBehaviorExpression = exports.CustomExpression = exports.CallFunctionExpression = exports.ExpressionKind = exports.registerAliases = exports.alias = exports.TwoWayBindingBehaviorRegistration = exports.ThrottleBindingBehaviorRegistration = exports.SignalBindingBehaviorRegistration = exports.FromViewBindingBehaviorRegistration = exports.ToViewBindingBehaviorRegistration = exports.OneTimeBindingBehaviorRegistration = exports.DebounceBindingBehaviorRegistration = exports.TaskStatus = exports.TaskQueuePriority = exports.TaskAbortError = exports.Task = exports.TaskQueue = exports.Platform = exports.IPlatform = void 0;
    var kernel_1 = require("@aurelia/kernel");
    Object.defineProperty(exports, "IPlatform", { enumerable: true, get: function () { return kernel_1.IPlatform; } });
    var platform_1 = require("@aurelia/platform");
    Object.defineProperty(exports, "Platform", { enumerable: true, get: function () { return platform_1.Platform; } });
    Object.defineProperty(exports, "TaskQueue", { enumerable: true, get: function () { return platform_1.TaskQueue; } });
    Object.defineProperty(exports, "Task", { enumerable: true, get: function () { return platform_1.Task; } });
    Object.defineProperty(exports, "TaskAbortError", { enumerable: true, get: function () { return platform_1.TaskAbortError; } });
    Object.defineProperty(exports, "TaskQueuePriority", { enumerable: true, get: function () { return platform_1.TaskQueuePriority; } });
    Object.defineProperty(exports, "TaskStatus", { enumerable: true, get: function () { return platform_1.TaskStatus; } });
    const binding_mode_1 = require("./binding-behaviors/binding-mode");
    const debounce_1 = require("./binding-behaviors/debounce");
    const signals_1 = require("./binding-behaviors/signals");
    const throttle_1 = require("./binding-behaviors/throttle");
    exports.DebounceBindingBehaviorRegistration = debounce_1.DebounceBindingBehavior;
    exports.OneTimeBindingBehaviorRegistration = binding_mode_1.OneTimeBindingBehavior;
    exports.ToViewBindingBehaviorRegistration = binding_mode_1.ToViewBindingBehavior;
    exports.FromViewBindingBehaviorRegistration = binding_mode_1.FromViewBindingBehavior;
    exports.SignalBindingBehaviorRegistration = signals_1.SignalBindingBehavior;
    exports.ThrottleBindingBehaviorRegistration = throttle_1.ThrottleBindingBehavior;
    exports.TwoWayBindingBehaviorRegistration = binding_mode_1.TwoWayBindingBehavior;
    var alias_1 = require("./alias");
    Object.defineProperty(exports, "alias", { enumerable: true, get: function () { return alias_1.alias; } });
    Object.defineProperty(exports, "registerAliases", { enumerable: true, get: function () { return alias_1.registerAliases; } });
    var ast_1 = require("./binding/ast");
    Object.defineProperty(exports, "ExpressionKind", { enumerable: true, get: function () { return ast_1.ExpressionKind; } });
    Object.defineProperty(exports, "CallFunctionExpression", { enumerable: true, get: function () { return ast_1.CallFunctionExpression; } });
    Object.defineProperty(exports, "CustomExpression", { enumerable: true, get: function () { return ast_1.CustomExpression; } });
    Object.defineProperty(exports, "BindingBehaviorExpression", { enumerable: true, get: function () { return ast_1.BindingBehaviorExpression; } });
    Object.defineProperty(exports, "ValueConverterExpression", { enumerable: true, get: function () { return ast_1.ValueConverterExpression; } });
    Object.defineProperty(exports, "AssignExpression", { enumerable: true, get: function () { return ast_1.AssignExpression; } });
    Object.defineProperty(exports, "ConditionalExpression", { enumerable: true, get: function () { return ast_1.ConditionalExpression; } });
    Object.defineProperty(exports, "AccessThisExpression", { enumerable: true, get: function () { return ast_1.AccessThisExpression; } });
    Object.defineProperty(exports, "AccessScopeExpression", { enumerable: true, get: function () { return ast_1.AccessScopeExpression; } });
    Object.defineProperty(exports, "AccessMemberExpression", { enumerable: true, get: function () { return ast_1.AccessMemberExpression; } });
    Object.defineProperty(exports, "AccessKeyedExpression", { enumerable: true, get: function () { return ast_1.AccessKeyedExpression; } });
    Object.defineProperty(exports, "CallScopeExpression", { enumerable: true, get: function () { return ast_1.CallScopeExpression; } });
    Object.defineProperty(exports, "CallMemberExpression", { enumerable: true, get: function () { return ast_1.CallMemberExpression; } });
    Object.defineProperty(exports, "BinaryExpression", { enumerable: true, get: function () { return ast_1.BinaryExpression; } });
    Object.defineProperty(exports, "UnaryExpression", { enumerable: true, get: function () { return ast_1.UnaryExpression; } });
    Object.defineProperty(exports, "PrimitiveLiteralExpression", { enumerable: true, get: function () { return ast_1.PrimitiveLiteralExpression; } });
    Object.defineProperty(exports, "HtmlLiteralExpression", { enumerable: true, get: function () { return ast_1.HtmlLiteralExpression; } });
    Object.defineProperty(exports, "ArrayLiteralExpression", { enumerable: true, get: function () { return ast_1.ArrayLiteralExpression; } });
    Object.defineProperty(exports, "ObjectLiteralExpression", { enumerable: true, get: function () { return ast_1.ObjectLiteralExpression; } });
    Object.defineProperty(exports, "TemplateExpression", { enumerable: true, get: function () { return ast_1.TemplateExpression; } });
    Object.defineProperty(exports, "TaggedTemplateExpression", { enumerable: true, get: function () { return ast_1.TaggedTemplateExpression; } });
    Object.defineProperty(exports, "ArrayBindingPattern", { enumerable: true, get: function () { return ast_1.ArrayBindingPattern; } });
    Object.defineProperty(exports, "ObjectBindingPattern", { enumerable: true, get: function () { return ast_1.ObjectBindingPattern; } });
    Object.defineProperty(exports, "BindingIdentifier", { enumerable: true, get: function () { return ast_1.BindingIdentifier; } });
    Object.defineProperty(exports, "ForOfStatement", { enumerable: true, get: function () { return ast_1.ForOfStatement; } });
    Object.defineProperty(exports, "Interpolation", { enumerable: true, get: function () { return ast_1.Interpolation; } });
    var property_binding_1 = require("./binding/property-binding");
    Object.defineProperty(exports, "PropertyBinding", { enumerable: true, get: function () { return property_binding_1.PropertyBinding; } });
    var call_binding_1 = require("./binding/call-binding");
    Object.defineProperty(exports, "CallBinding", { enumerable: true, get: function () { return call_binding_1.CallBinding; } });
    var connectable_1 = require("./binding/connectable");
    Object.defineProperty(exports, "connectable", { enumerable: true, get: function () { return connectable_1.connectable; } });
    Object.defineProperty(exports, "BindingMediator", { enumerable: true, get: function () { return connectable_1.BindingMediator; } });
    var expression_parser_1 = require("./binding/expression-parser");
    Object.defineProperty(exports, "IExpressionParser", { enumerable: true, get: function () { return expression_parser_1.IExpressionParser; } });
    Object.defineProperty(exports, "BindingType", { enumerable: true, get: function () { return expression_parser_1.BindingType; } });
    Object.defineProperty(exports, "parseExpression", { enumerable: true, get: function () { return expression_parser_1.parseExpression; } });
    Object.defineProperty(exports, "Char", { enumerable: true, get: function () { return expression_parser_1.Char; } });
    Object.defineProperty(exports, "Access", { enumerable: true, get: function () { return expression_parser_1.Access; } });
    Object.defineProperty(exports, "Precedence", { enumerable: true, get: function () { return expression_parser_1.Precedence; } });
    Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return expression_parser_1.parse; } });
    Object.defineProperty(exports, "ParserState", { enumerable: true, get: function () { return expression_parser_1.ParserState; } });
    var interpolation_binding_1 = require("./binding/interpolation-binding");
    Object.defineProperty(exports, "ContentBinding", { enumerable: true, get: function () { return interpolation_binding_1.ContentBinding; } });
    Object.defineProperty(exports, "InterpolationBinding", { enumerable: true, get: function () { return interpolation_binding_1.InterpolationBinding; } });
    var let_binding_1 = require("./binding/let-binding");
    Object.defineProperty(exports, "LetBinding", { enumerable: true, get: function () { return let_binding_1.LetBinding; } });
    var ref_binding_1 = require("./binding/ref-binding");
    Object.defineProperty(exports, "RefBinding", { enumerable: true, get: function () { return ref_binding_1.RefBinding; } });
    var array_observer_1 = require("./observation/array-observer");
    Object.defineProperty(exports, "ArrayObserver", { enumerable: true, get: function () { return array_observer_1.ArrayObserver; } });
    Object.defineProperty(exports, "ArrayIndexObserver", { enumerable: true, get: function () { return array_observer_1.ArrayIndexObserver; } });
    Object.defineProperty(exports, "enableArrayObservation", { enumerable: true, get: function () { return array_observer_1.enableArrayObservation; } });
    Object.defineProperty(exports, "disableArrayObservation", { enumerable: true, get: function () { return array_observer_1.disableArrayObservation; } });
    Object.defineProperty(exports, "applyMutationsToIndices", { enumerable: true, get: function () { return array_observer_1.applyMutationsToIndices; } });
    Object.defineProperty(exports, "synchronizeIndices", { enumerable: true, get: function () { return array_observer_1.synchronizeIndices; } });
    var map_observer_1 = require("./observation/map-observer");
    Object.defineProperty(exports, "MapObserver", { enumerable: true, get: function () { return map_observer_1.MapObserver; } });
    Object.defineProperty(exports, "enableMapObservation", { enumerable: true, get: function () { return map_observer_1.enableMapObservation; } });
    Object.defineProperty(exports, "disableMapObservation", { enumerable: true, get: function () { return map_observer_1.disableMapObservation; } });
    var set_observer_1 = require("./observation/set-observer");
    Object.defineProperty(exports, "SetObserver", { enumerable: true, get: function () { return set_observer_1.SetObserver; } });
    Object.defineProperty(exports, "enableSetObservation", { enumerable: true, get: function () { return set_observer_1.enableSetObservation; } });
    Object.defineProperty(exports, "disableSetObservation", { enumerable: true, get: function () { return set_observer_1.disableSetObservation; } });
    var binding_context_1 = require("./observation/binding-context");
    Object.defineProperty(exports, "BindingContext", { enumerable: true, get: function () { return binding_context_1.BindingContext; } });
    Object.defineProperty(exports, "Scope", { enumerable: true, get: function () { return binding_context_1.Scope; } });
    Object.defineProperty(exports, "OverrideContext", { enumerable: true, get: function () { return binding_context_1.OverrideContext; } });
    var collection_length_observer_1 = require("./observation/collection-length-observer");
    Object.defineProperty(exports, "CollectionLengthObserver", { enumerable: true, get: function () { return collection_length_observer_1.CollectionLengthObserver; } });
    var collection_size_observer_1 = require("./observation/collection-size-observer");
    Object.defineProperty(exports, "CollectionSizeObserver", { enumerable: true, get: function () { return collection_size_observer_1.CollectionSizeObserver; } });
    var computed_observer_1 = require("./observation/computed-observer");
    Object.defineProperty(exports, "computed", { enumerable: true, get: function () { return computed_observer_1.computed; } });
    Object.defineProperty(exports, "createComputedObserver", { enumerable: true, get: function () { return computed_observer_1.createComputedObserver; } });
    Object.defineProperty(exports, "CustomSetterObserver", { enumerable: true, get: function () { return computed_observer_1.CustomSetterObserver; } });
    Object.defineProperty(exports, "GetterObserver", { enumerable: true, get: function () { return computed_observer_1.GetterObserver; } });
    var dirty_checker_1 = require("./observation/dirty-checker");
    Object.defineProperty(exports, "IDirtyChecker", { enumerable: true, get: function () { return dirty_checker_1.IDirtyChecker; } });
    Object.defineProperty(exports, "DirtyCheckProperty", { enumerable: true, get: function () { return dirty_checker_1.DirtyCheckProperty; } });
    Object.defineProperty(exports, "DirtyCheckSettings", { enumerable: true, get: function () { return dirty_checker_1.DirtyCheckSettings; } });
    var observable_1 = require("./observation/observable");
    Object.defineProperty(exports, "observable", { enumerable: true, get: function () { return observable_1.observable; } });
    var observer_locator_1 = require("./observation/observer-locator");
    Object.defineProperty(exports, "IObserverLocator", { enumerable: true, get: function () { return observer_locator_1.IObserverLocator; } });
    Object.defineProperty(exports, "INodeObserverLocator", { enumerable: true, get: function () { return observer_locator_1.INodeObserverLocator; } });
    Object.defineProperty(exports, "getCollectionObserver", { enumerable: true, get: function () { return observer_locator_1.getCollectionObserver; } });
    Object.defineProperty(exports, "ObserverLocator", { enumerable: true, get: function () { return observer_locator_1.ObserverLocator; } });
    var primitive_observer_1 = require("./observation/primitive-observer");
    Object.defineProperty(exports, "PrimitiveObserver", { enumerable: true, get: function () { return primitive_observer_1.PrimitiveObserver; } });
    var property_accessor_1 = require("./observation/property-accessor");
    Object.defineProperty(exports, "PropertyAccessor", { enumerable: true, get: function () { return property_accessor_1.PropertyAccessor; } });
    var bindable_observer_1 = require("./observation/bindable-observer");
    Object.defineProperty(exports, "BindableObserver", { enumerable: true, get: function () { return bindable_observer_1.BindableObserver; } });
    var setter_observer_1 = require("./observation/setter-observer");
    Object.defineProperty(exports, "SetterObserver", { enumerable: true, get: function () { return setter_observer_1.SetterObserver; } });
    var signaler_1 = require("./observation/signaler");
    Object.defineProperty(exports, "ISignaler", { enumerable: true, get: function () { return signaler_1.ISignaler; } });
    var subscriber_collection_1 = require("./observation/subscriber-collection");
    Object.defineProperty(exports, "subscriberCollection", { enumerable: true, get: function () { return subscriber_collection_1.subscriberCollection; } });
    Object.defineProperty(exports, "collectionSubscriberCollection", { enumerable: true, get: function () { return subscriber_collection_1.collectionSubscriberCollection; } });
    var binding_behavior_1 = require("./binding-behavior");
    Object.defineProperty(exports, "bindingBehavior", { enumerable: true, get: function () { return binding_behavior_1.bindingBehavior; } });
    Object.defineProperty(exports, "BindingBehavior", { enumerable: true, get: function () { return binding_behavior_1.BindingBehavior; } });
    Object.defineProperty(exports, "BindingBehaviorDefinition", { enumerable: true, get: function () { return binding_behavior_1.BindingBehaviorDefinition; } });
    Object.defineProperty(exports, "BindingInterceptor", { enumerable: true, get: function () { return binding_behavior_1.BindingInterceptor; } });
    Object.defineProperty(exports, "BindingBehaviorFactory", { enumerable: true, get: function () { return binding_behavior_1.BindingBehaviorFactory; } });
    Object.defineProperty(exports, "BindingBehaviorStrategy", { enumerable: true, get: function () { return binding_behavior_1.BindingBehaviorStrategy; } });
    var binding_mode_2 = require("./binding-behaviors/binding-mode");
    Object.defineProperty(exports, "BindingModeBehavior", { enumerable: true, get: function () { return binding_mode_2.BindingModeBehavior; } });
    Object.defineProperty(exports, "OneTimeBindingBehavior", { enumerable: true, get: function () { return binding_mode_2.OneTimeBindingBehavior; } });
    Object.defineProperty(exports, "ToViewBindingBehavior", { enumerable: true, get: function () { return binding_mode_2.ToViewBindingBehavior; } });
    Object.defineProperty(exports, "FromViewBindingBehavior", { enumerable: true, get: function () { return binding_mode_2.FromViewBindingBehavior; } });
    Object.defineProperty(exports, "TwoWayBindingBehavior", { enumerable: true, get: function () { return binding_mode_2.TwoWayBindingBehavior; } });
    var debounce_2 = require("./binding-behaviors/debounce");
    Object.defineProperty(exports, "DebounceBindingBehavior", { enumerable: true, get: function () { return debounce_2.DebounceBindingBehavior; } });
    var signals_2 = require("./binding-behaviors/signals");
    Object.defineProperty(exports, "SignalBindingBehavior", { enumerable: true, get: function () { return signals_2.SignalBindingBehavior; } });
    var throttle_2 = require("./binding-behaviors/throttle");
    Object.defineProperty(exports, "ThrottleBindingBehavior", { enumerable: true, get: function () { return throttle_2.ThrottleBindingBehavior; } });
    var value_converter_1 = require("./value-converter");
    Object.defineProperty(exports, "ValueConverter", { enumerable: true, get: function () { return value_converter_1.ValueConverter; } });
    Object.defineProperty(exports, "ValueConverterDefinition", { enumerable: true, get: function () { return value_converter_1.ValueConverterDefinition; } });
    Object.defineProperty(exports, "valueConverter", { enumerable: true, get: function () { return value_converter_1.valueConverter; } });
    var bindable_1 = require("./bindable");
    Object.defineProperty(exports, "bindable", { enumerable: true, get: function () { return bindable_1.bindable; } });
    Object.defineProperty(exports, "BindableDefinition", { enumerable: true, get: function () { return bindable_1.BindableDefinition; } });
    Object.defineProperty(exports, "Bindable", { enumerable: true, get: function () { return bindable_1.Bindable; } });
    var observation_1 = require("./observation");
    Object.defineProperty(exports, "BindingMode", { enumerable: true, get: function () { return observation_1.BindingMode; } });
    Object.defineProperty(exports, "LifecycleFlags", { enumerable: true, get: function () { return observation_1.LifecycleFlags; } });
    Object.defineProperty(exports, "ILifecycle", { enumerable: true, get: function () { return observation_1.ILifecycle; } });
    Object.defineProperty(exports, "AccessorType", { enumerable: true, get: function () { return observation_1.AccessorType; } });
    Object.defineProperty(exports, "CollectionKind", { enumerable: true, get: function () { return observation_1.CollectionKind; } });
    Object.defineProperty(exports, "DelegationStrategy", { enumerable: true, get: function () { return observation_1.DelegationStrategy; } });
    Object.defineProperty(exports, "isIndexMap", { enumerable: true, get: function () { return observation_1.isIndexMap; } });
    Object.defineProperty(exports, "copyIndexMap", { enumerable: true, get: function () { return observation_1.copyIndexMap; } });
    Object.defineProperty(exports, "cloneIndexMap", { enumerable: true, get: function () { return observation_1.cloneIndexMap; } });
    Object.defineProperty(exports, "createIndexMap", { enumerable: true, get: function () { return observation_1.createIndexMap; } });
});
//# sourceMappingURL=index.js.map
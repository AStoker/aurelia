(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./attribute-parser", "./attribute-pattern", "./attribute-patterns", "./binding-command", "./binding-commands", "./binding/ast", "./binding/property-binding", "./binding/call-binding", "./binding/connectable", "./binding/expression-parser", "./binding/interpolation-binding", "./binding/let-binding", "./binding/ref-binding", "./observation/array-observer", "./observation/map-observer", "./observation/set-observer", "./observation/binding-context", "./observation/collection-length-observer", "./observation/collection-size-observer", "./observation/computed-observer", "./observation/dirty-checker", "./observation/observable", "./observation/observer-locator", "./observation/primitive-observer", "./observation/property-accessor", "./observation/proxy-observer", "./observation/bindable-observer", "./observation/setter-observer", "./observation/signaler", "./observation/subscriber-collection", "./resources/binding-behavior", "./resources/binding-behaviors/binding-mode", "./resources/binding-behaviors/debounce", "./resources/binding-behaviors/signals", "./resources/binding-behaviors/throttle", "./resources/custom-attribute", "./resources/custom-attributes/flags", "./resources/custom-attributes/if", "./resources/custom-attributes/repeat", "./resources/custom-attributes/with", "./resources/custom-elements/au-slot", "./resources/custom-element", "./resources/value-converter", "./resources/value-converters/sanitize", "./resources/value-converters/view", "@aurelia/scheduler", "./templating/bindable", "./templating/children", "./templating/controller", "./templating/view", "./aurelia", "./configuration", "./definitions", "./dom", "./flags", "./instructions", "./lifecycle", "./templating/render-context", "./app-task", "./observation", "./renderer", "./resource-model", "./semantic-model"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectionSymbol = exports.TextSymbol = exports.TemplateControllerSymbol = exports.SymbolFlags = exports.PlainElementSymbol = exports.PlainAttributeSymbol = exports.LetElementSymbol = exports.CustomElementSymbol = exports.CustomAttributeSymbol = exports.BindingSymbol = exports.AttrInfo = exports.ElementInfo = exports.BindableInfo = exports.ResourceModel = exports.ensureExpression = exports.instructionRenderer = exports.ITemplateCompiler = exports.IRenderer = exports.IInstructionRenderer = exports.applyBindingBehavior = exports.createIndexMap = exports.cloneIndexMap = exports.copyIndexMap = exports.isIndexMap = exports.DelegationStrategy = exports.CollectionKind = exports.AccessorType = exports.IAppTask = exports.AppTask = exports.isRenderContext = exports.getRenderContext = exports.MountStrategy = exports.IViewFactory = exports.IController = exports.ILifecycle = exports.ViewModelKind = exports.TwoWayBindingInstruction = exports.ToViewBindingInstruction = exports.SetPropertyInstruction = exports.RefBindingInstruction = exports.OneTimeBindingInstruction = exports.LetElementInstruction = exports.LetBindingInstruction = exports.IteratorBindingInstruction = exports.InterpolationInstruction = exports.HydrateTemplateController = exports.HydrateElementInstruction = exports.HydrateAttributeInstruction = exports.FromViewBindingInstruction = exports.CallBindingInstruction = exports.LifecycleFlags = exports.ExpressionKind = exports.BindingStrategy = exports.BindingMode = exports.NodeSequence = exports.IDOM = exports.IRenderLocation = exports.INode = exports.DOM = exports.registerAliases = exports.alias = exports.TargetedInstructionType = exports.ITargetedInstruction = exports.isTargetedInstruction = exports.HooksDefinition = exports.RuntimeConfiguration = exports.DefaultResources = exports.TemplateControllerRendererRegistration = exports.SetPropertyRendererRegistration = exports.PropertyBindingRendererRegistration = exports.LetElementRendererRegistration = exports.IteratorBindingRendererRegistration = exports.InterpolationBindingRendererRegistration = exports.CustomElementRendererRegistration = exports.CustomAttributeRendererRegistration = exports.CallBindingRendererRegistration = exports.RefBindingRendererRegistration = exports.TwoWayBindingBehaviorRegistration = exports.ThrottleBindingBehaviorRegistration = exports.SignalBindingBehaviorRegistration = exports.FromViewBindingBehaviorRegistration = exports.ToViewBindingBehaviorRegistration = exports.OneTimeBindingBehaviorRegistration = exports.DebounceBindingBehaviorRegistration = exports.SanitizeValueConverterRegistration = exports.WithRegistration = exports.RepeatRegistration = exports.ElseRegistration = exports.IfRegistration = exports.DefaultBindingLanguage = exports.TwoWayBindingCommandRegistration = exports.ToViewBindingCommandRegistration = exports.OneTimeBindingCommandRegistration = exports.FromViewBindingCommandRegistration = exports.ForBindingCommandRegistration = exports.DefaultBindingCommandRegistration = exports.CallBindingCommandRegistration = exports.ShortHandBindingSyntax = exports.ColonPrefixedBindAttributePatternRegistration = exports.AtPrefixedTriggerAttributePatternRegistration = exports.DefaultBindingSyntax = exports.DotSeparatedAttributePatternRegistration = exports.RefAttributePatternRegistration = exports.ICompositionRoot = exports.CompositionRoot = exports.IDOMInitializer = exports.IAurelia = exports.Aurelia = exports.Views = exports.view = exports.ViewLocator = exports.IViewLocator = exports.ViewFactory = exports.isCustomElementViewModel = exports.isCustomElementController = exports.Controller = exports.ChildrenObserver = exports.children = exports.Children = exports.ChildrenDefinition = exports.Bindable = exports.BindableDefinition = exports.bindable = exports.TaskQueuePriority = exports.TaskQueue = exports.TaskAbortError = exports.Task = exports.IScheduler = exports.Now = exports.ViewValueConverter = exports.SanitizeValueConverter = exports.ISanitizer = exports.valueConverter = exports.ValueConverterDefinition = exports.ValueConverter = exports.useShadowDOM = exports.IProjectorLocator = exports.CustomElementDefinition = exports.CustomElement = exports.customElement = exports.containerless = exports.ProjectionContext = exports.IProjectionProvider = exports.RegisteredProjections = exports.AuSlotContentType = exports.SlotInfo = exports.IProjections = exports.AuSlot = exports.With = exports.Repeat = exports.Else = exports.If = exports.ObserveShallow = exports.InfrequentMutations = exports.FrequentMutations = exports.templateController = exports.CustomAttributeDefinition = exports.CustomAttribute = exports.customAttribute = exports.ThrottleBindingBehavior = exports.SignalBindingBehavior = exports.DebounceBindingBehavior = exports.TwoWayBindingBehavior = exports.FromViewBindingBehavior = exports.ToViewBindingBehavior = exports.OneTimeBindingBehavior = exports.BindingModeBehavior = exports.BindingInterceptor = exports.BindingBehaviorDefinition = exports.BindingBehavior = exports.bindingBehavior = exports.proxySubscriberCollection = exports.collectionSubscriberCollection = exports.subscriberCollection = exports.ISignaler = exports.SetterObserver = exports.BindableObserver = exports.ProxyObserver = exports.PropertyAccessor = exports.PrimitiveObserver = exports.ObserverLocator = exports.getCollectionObserver = exports.ITargetAccessorLocator = exports.ITargetObserverLocator = exports.IObserverLocator = exports.observable = exports.DirtyCheckSettings = exports.DirtyCheckProperty = exports.IDirtyChecker = exports.GetterObserver = exports.CustomSetterObserver = exports.createComputedObserver = exports.computed = exports.CollectionSizeObserver = exports.CollectionLengthObserver = exports.OverrideContext = exports.Scope = exports.BindingContext = exports.disableSetObservation = exports.enableSetObservation = exports.SetObserver = exports.disableMapObservation = exports.enableMapObservation = exports.MapObserver = exports.synchronizeIndices = exports.applyMutationsToIndices = exports.disableArrayObservation = exports.enableArrayObservation = exports.ArrayIndexObserver = exports.ArrayObserver = exports.RefBinding = exports.LetBinding = exports.InterpolationBinding = exports.MultiInterpolationBinding = exports.ParserState = exports.parse = exports.Precedence = exports.Access = exports.Char = exports.parseExpression = exports.BindingType = exports.IExpressionParser = exports.BindingMediator = exports.connectable = exports.CallBinding = exports.PropertyBinding = exports.Interpolation = exports.ForOfStatement = exports.BindingIdentifier = exports.ObjectBindingPattern = exports.ArrayBindingPattern = exports.TaggedTemplateExpression = exports.TemplateExpression = exports.ObjectLiteralExpression = exports.ArrayLiteralExpression = exports.HtmlLiteralExpression = exports.PrimitiveLiteralExpression = exports.UnaryExpression = exports.BinaryExpression = exports.CallMemberExpression = exports.CallScopeExpression = exports.AccessKeyedExpression = exports.AccessMemberExpression = exports.AccessScopeExpression = exports.AccessThisExpression = exports.ConditionalExpression = exports.AssignExpression = exports.ValueConverterExpression = exports.BindingBehaviorExpression = exports.CustomExpression = exports.CallFunctionExpression = exports.TwoWayBindingCommand = exports.ToViewBindingCommand = exports.OneTimeBindingCommand = exports.FromViewBindingCommand = exports.ForBindingCommand = exports.DefaultBindingCommand = exports.CallBindingCommand = exports.getTarget = exports.BindingCommandDefinition = exports.BindingCommand = exports.bindingCommand = exports.RefAttributePattern = exports.DotSeparatedAttributePattern = exports.ColonPrefixedBindAttributePattern = exports.AtPrefixedTriggerAttributePattern = exports.ISyntaxInterpreter = exports.Interpretation = exports.AttributePattern = exports.IAttributePattern = exports.attributePattern = exports.IAttributeParser = exports.AttrSyntax = void 0;
    var attribute_parser_1 = require("./attribute-parser");
    Object.defineProperty(exports, "AttrSyntax", { enumerable: true, get: function () { return attribute_parser_1.AttrSyntax; } });
    Object.defineProperty(exports, "IAttributeParser", { enumerable: true, get: function () { return attribute_parser_1.IAttributeParser; } });
    var attribute_pattern_1 = require("./attribute-pattern");
    Object.defineProperty(exports, "attributePattern", { enumerable: true, get: function () { return attribute_pattern_1.attributePattern; } });
    Object.defineProperty(exports, "IAttributePattern", { enumerable: true, get: function () { return attribute_pattern_1.IAttributePattern; } });
    Object.defineProperty(exports, "AttributePattern", { enumerable: true, get: function () { return attribute_pattern_1.AttributePattern; } });
    Object.defineProperty(exports, "Interpretation", { enumerable: true, get: function () { return attribute_pattern_1.Interpretation; } });
    Object.defineProperty(exports, "ISyntaxInterpreter", { enumerable: true, get: function () { return attribute_pattern_1.ISyntaxInterpreter; } });
    var attribute_patterns_1 = require("./attribute-patterns");
    Object.defineProperty(exports, "AtPrefixedTriggerAttributePattern", { enumerable: true, get: function () { return attribute_patterns_1.AtPrefixedTriggerAttributePattern; } });
    Object.defineProperty(exports, "ColonPrefixedBindAttributePattern", { enumerable: true, get: function () { return attribute_patterns_1.ColonPrefixedBindAttributePattern; } });
    Object.defineProperty(exports, "DotSeparatedAttributePattern", { enumerable: true, get: function () { return attribute_patterns_1.DotSeparatedAttributePattern; } });
    Object.defineProperty(exports, "RefAttributePattern", { enumerable: true, get: function () { return attribute_patterns_1.RefAttributePattern; } });
    var binding_command_1 = require("./binding-command");
    Object.defineProperty(exports, "bindingCommand", { enumerable: true, get: function () { return binding_command_1.bindingCommand; } });
    Object.defineProperty(exports, "BindingCommand", { enumerable: true, get: function () { return binding_command_1.BindingCommand; } });
    Object.defineProperty(exports, "BindingCommandDefinition", { enumerable: true, get: function () { return binding_command_1.BindingCommandDefinition; } });
    Object.defineProperty(exports, "getTarget", { enumerable: true, get: function () { return binding_command_1.getTarget; } });
    var binding_commands_1 = require("./binding-commands");
    Object.defineProperty(exports, "CallBindingCommand", { enumerable: true, get: function () { return binding_commands_1.CallBindingCommand; } });
    Object.defineProperty(exports, "DefaultBindingCommand", { enumerable: true, get: function () { return binding_commands_1.DefaultBindingCommand; } });
    Object.defineProperty(exports, "ForBindingCommand", { enumerable: true, get: function () { return binding_commands_1.ForBindingCommand; } });
    Object.defineProperty(exports, "FromViewBindingCommand", { enumerable: true, get: function () { return binding_commands_1.FromViewBindingCommand; } });
    Object.defineProperty(exports, "OneTimeBindingCommand", { enumerable: true, get: function () { return binding_commands_1.OneTimeBindingCommand; } });
    Object.defineProperty(exports, "ToViewBindingCommand", { enumerable: true, get: function () { return binding_commands_1.ToViewBindingCommand; } });
    Object.defineProperty(exports, "TwoWayBindingCommand", { enumerable: true, get: function () { return binding_commands_1.TwoWayBindingCommand; } });
    var ast_1 = require("./binding/ast");
    Object.defineProperty(exports, "CallFunctionExpression", { enumerable: true, get: function () { return ast_1.CallFunctionExpression; } });
    Object.defineProperty(exports, "CustomExpression", { enumerable: true, get: function () { return ast_1.CustomExpression; } });
    Object.defineProperty(exports, "BindingBehaviorExpression", { enumerable: true, get: function () { return ast_1.BindingBehaviorExpression; } });
    Object.defineProperty(exports, "ValueConverterExpression", { enumerable: true, get: function () { return ast_1.ValueConverterExpression; } });
    Object.defineProperty(exports, "AssignExpression", { enumerable: true, get: function () { return ast_1.AssignExpression; } });
    Object.defineProperty(exports, "ConditionalExpression", { enumerable: true, get: function () { return ast_1.ConditionalExpression; } });
    Object.defineProperty(exports, "AccessThisExpression", { enumerable: true, get: function () { return ast_1.AccessThisExpression; } });
    Object.defineProperty(exports, "AccessScopeExpression", { enumerable: true, get: function () { return ast_1.AccessScopeExpression; } });
    Object.defineProperty(exports, "AccessMemberExpression", { enumerable: true, get: function () { return ast_1.AccessMemberExpression; } });
    Object.defineProperty(exports, "AccessKeyedExpression", { enumerable: true, get: function () { return ast_1.AccessKeyedExpression; } });
    Object.defineProperty(exports, "CallScopeExpression", { enumerable: true, get: function () { return ast_1.CallScopeExpression; } });
    Object.defineProperty(exports, "CallMemberExpression", { enumerable: true, get: function () { return ast_1.CallMemberExpression; } });
    Object.defineProperty(exports, "BinaryExpression", { enumerable: true, get: function () { return ast_1.BinaryExpression; } });
    Object.defineProperty(exports, "UnaryExpression", { enumerable: true, get: function () { return ast_1.UnaryExpression; } });
    Object.defineProperty(exports, "PrimitiveLiteralExpression", { enumerable: true, get: function () { return ast_1.PrimitiveLiteralExpression; } });
    Object.defineProperty(exports, "HtmlLiteralExpression", { enumerable: true, get: function () { return ast_1.HtmlLiteralExpression; } });
    Object.defineProperty(exports, "ArrayLiteralExpression", { enumerable: true, get: function () { return ast_1.ArrayLiteralExpression; } });
    Object.defineProperty(exports, "ObjectLiteralExpression", { enumerable: true, get: function () { return ast_1.ObjectLiteralExpression; } });
    Object.defineProperty(exports, "TemplateExpression", { enumerable: true, get: function () { return ast_1.TemplateExpression; } });
    Object.defineProperty(exports, "TaggedTemplateExpression", { enumerable: true, get: function () { return ast_1.TaggedTemplateExpression; } });
    Object.defineProperty(exports, "ArrayBindingPattern", { enumerable: true, get: function () { return ast_1.ArrayBindingPattern; } });
    Object.defineProperty(exports, "ObjectBindingPattern", { enumerable: true, get: function () { return ast_1.ObjectBindingPattern; } });
    Object.defineProperty(exports, "BindingIdentifier", { enumerable: true, get: function () { return ast_1.BindingIdentifier; } });
    Object.defineProperty(exports, "ForOfStatement", { enumerable: true, get: function () { return ast_1.ForOfStatement; } });
    Object.defineProperty(exports, "Interpolation", { enumerable: true, get: function () { return ast_1.Interpolation; } });
    var property_binding_1 = require("./binding/property-binding");
    Object.defineProperty(exports, "PropertyBinding", { enumerable: true, get: function () { return property_binding_1.PropertyBinding; } });
    var call_binding_1 = require("./binding/call-binding");
    Object.defineProperty(exports, "CallBinding", { enumerable: true, get: function () { return call_binding_1.CallBinding; } });
    var connectable_1 = require("./binding/connectable");
    Object.defineProperty(exports, "connectable", { enumerable: true, get: function () { return connectable_1.connectable; } });
    Object.defineProperty(exports, "BindingMediator", { enumerable: true, get: function () { return connectable_1.BindingMediator; } });
    var expression_parser_1 = require("./binding/expression-parser");
    Object.defineProperty(exports, "IExpressionParser", { enumerable: true, get: function () { return expression_parser_1.IExpressionParser; } });
    Object.defineProperty(exports, "BindingType", { enumerable: true, get: function () { return expression_parser_1.BindingType; } });
    Object.defineProperty(exports, "parseExpression", { enumerable: true, get: function () { return expression_parser_1.parseExpression; } });
    Object.defineProperty(exports, "Char", { enumerable: true, get: function () { return expression_parser_1.Char; } });
    Object.defineProperty(exports, "Access", { enumerable: true, get: function () { return expression_parser_1.Access; } });
    Object.defineProperty(exports, "Precedence", { enumerable: true, get: function () { return expression_parser_1.Precedence; } });
    Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return expression_parser_1.parse; } });
    Object.defineProperty(exports, "ParserState", { enumerable: true, get: function () { return expression_parser_1.ParserState; } });
    var interpolation_binding_1 = require("./binding/interpolation-binding");
    Object.defineProperty(exports, "MultiInterpolationBinding", { enumerable: true, get: function () { return interpolation_binding_1.MultiInterpolationBinding; } });
    Object.defineProperty(exports, "InterpolationBinding", { enumerable: true, get: function () { return interpolation_binding_1.InterpolationBinding; } });
    var let_binding_1 = require("./binding/let-binding");
    Object.defineProperty(exports, "LetBinding", { enumerable: true, get: function () { return let_binding_1.LetBinding; } });
    var ref_binding_1 = require("./binding/ref-binding");
    Object.defineProperty(exports, "RefBinding", { enumerable: true, get: function () { return ref_binding_1.RefBinding; } });
    var array_observer_1 = require("./observation/array-observer");
    Object.defineProperty(exports, "ArrayObserver", { enumerable: true, get: function () { return array_observer_1.ArrayObserver; } });
    Object.defineProperty(exports, "ArrayIndexObserver", { enumerable: true, get: function () { return array_observer_1.ArrayIndexObserver; } });
    Object.defineProperty(exports, "enableArrayObservation", { enumerable: true, get: function () { return array_observer_1.enableArrayObservation; } });
    Object.defineProperty(exports, "disableArrayObservation", { enumerable: true, get: function () { return array_observer_1.disableArrayObservation; } });
    Object.defineProperty(exports, "applyMutationsToIndices", { enumerable: true, get: function () { return array_observer_1.applyMutationsToIndices; } });
    Object.defineProperty(exports, "synchronizeIndices", { enumerable: true, get: function () { return array_observer_1.synchronizeIndices; } });
    var map_observer_1 = require("./observation/map-observer");
    Object.defineProperty(exports, "MapObserver", { enumerable: true, get: function () { return map_observer_1.MapObserver; } });
    Object.defineProperty(exports, "enableMapObservation", { enumerable: true, get: function () { return map_observer_1.enableMapObservation; } });
    Object.defineProperty(exports, "disableMapObservation", { enumerable: true, get: function () { return map_observer_1.disableMapObservation; } });
    var set_observer_1 = require("./observation/set-observer");
    Object.defineProperty(exports, "SetObserver", { enumerable: true, get: function () { return set_observer_1.SetObserver; } });
    Object.defineProperty(exports, "enableSetObservation", { enumerable: true, get: function () { return set_observer_1.enableSetObservation; } });
    Object.defineProperty(exports, "disableSetObservation", { enumerable: true, get: function () { return set_observer_1.disableSetObservation; } });
    var binding_context_1 = require("./observation/binding-context");
    Object.defineProperty(exports, "BindingContext", { enumerable: true, get: function () { return binding_context_1.BindingContext; } });
    Object.defineProperty(exports, "Scope", { enumerable: true, get: function () { return binding_context_1.Scope; } });
    Object.defineProperty(exports, "OverrideContext", { enumerable: true, get: function () { return binding_context_1.OverrideContext; } });
    var collection_length_observer_1 = require("./observation/collection-length-observer");
    Object.defineProperty(exports, "CollectionLengthObserver", { enumerable: true, get: function () { return collection_length_observer_1.CollectionLengthObserver; } });
    var collection_size_observer_1 = require("./observation/collection-size-observer");
    Object.defineProperty(exports, "CollectionSizeObserver", { enumerable: true, get: function () { return collection_size_observer_1.CollectionSizeObserver; } });
    var computed_observer_1 = require("./observation/computed-observer");
    Object.defineProperty(exports, "computed", { enumerable: true, get: function () { return computed_observer_1.computed; } });
    Object.defineProperty(exports, "createComputedObserver", { enumerable: true, get: function () { return computed_observer_1.createComputedObserver; } });
    Object.defineProperty(exports, "CustomSetterObserver", { enumerable: true, get: function () { return computed_observer_1.CustomSetterObserver; } });
    Object.defineProperty(exports, "GetterObserver", { enumerable: true, get: function () { return computed_observer_1.GetterObserver; } });
    var dirty_checker_1 = require("./observation/dirty-checker");
    Object.defineProperty(exports, "IDirtyChecker", { enumerable: true, get: function () { return dirty_checker_1.IDirtyChecker; } });
    Object.defineProperty(exports, "DirtyCheckProperty", { enumerable: true, get: function () { return dirty_checker_1.DirtyCheckProperty; } });
    Object.defineProperty(exports, "DirtyCheckSettings", { enumerable: true, get: function () { return dirty_checker_1.DirtyCheckSettings; } });
    var observable_1 = require("./observation/observable");
    Object.defineProperty(exports, "observable", { enumerable: true, get: function () { return observable_1.observable; } });
    var observer_locator_1 = require("./observation/observer-locator");
    Object.defineProperty(exports, "IObserverLocator", { enumerable: true, get: function () { return observer_locator_1.IObserverLocator; } });
    Object.defineProperty(exports, "ITargetObserverLocator", { enumerable: true, get: function () { return observer_locator_1.ITargetObserverLocator; } });
    Object.defineProperty(exports, "ITargetAccessorLocator", { enumerable: true, get: function () { return observer_locator_1.ITargetAccessorLocator; } });
    Object.defineProperty(exports, "getCollectionObserver", { enumerable: true, get: function () { return observer_locator_1.getCollectionObserver; } });
    Object.defineProperty(exports, "ObserverLocator", { enumerable: true, get: function () { return observer_locator_1.ObserverLocator; } });
    var primitive_observer_1 = require("./observation/primitive-observer");
    Object.defineProperty(exports, "PrimitiveObserver", { enumerable: true, get: function () { return primitive_observer_1.PrimitiveObserver; } });
    var property_accessor_1 = require("./observation/property-accessor");
    Object.defineProperty(exports, "PropertyAccessor", { enumerable: true, get: function () { return property_accessor_1.PropertyAccessor; } });
    var proxy_observer_1 = require("./observation/proxy-observer");
    Object.defineProperty(exports, "ProxyObserver", { enumerable: true, get: function () { return proxy_observer_1.ProxyObserver; } });
    var bindable_observer_1 = require("./observation/bindable-observer");
    Object.defineProperty(exports, "BindableObserver", { enumerable: true, get: function () { return bindable_observer_1.BindableObserver; } });
    var setter_observer_1 = require("./observation/setter-observer");
    Object.defineProperty(exports, "SetterObserver", { enumerable: true, get: function () { return setter_observer_1.SetterObserver; } });
    var signaler_1 = require("./observation/signaler");
    Object.defineProperty(exports, "ISignaler", { enumerable: true, get: function () { return signaler_1.ISignaler; } });
    var subscriber_collection_1 = require("./observation/subscriber-collection");
    Object.defineProperty(exports, "subscriberCollection", { enumerable: true, get: function () { return subscriber_collection_1.subscriberCollection; } });
    Object.defineProperty(exports, "collectionSubscriberCollection", { enumerable: true, get: function () { return subscriber_collection_1.collectionSubscriberCollection; } });
    Object.defineProperty(exports, "proxySubscriberCollection", { enumerable: true, get: function () { return subscriber_collection_1.proxySubscriberCollection; } });
    var binding_behavior_1 = require("./resources/binding-behavior");
    Object.defineProperty(exports, "bindingBehavior", { enumerable: true, get: function () { return binding_behavior_1.bindingBehavior; } });
    Object.defineProperty(exports, "BindingBehavior", { enumerable: true, get: function () { return binding_behavior_1.BindingBehavior; } });
    Object.defineProperty(exports, "BindingBehaviorDefinition", { enumerable: true, get: function () { return binding_behavior_1.BindingBehaviorDefinition; } });
    Object.defineProperty(exports, "BindingInterceptor", { enumerable: true, get: function () { return binding_behavior_1.BindingInterceptor; } });
    var binding_mode_1 = require("./resources/binding-behaviors/binding-mode");
    Object.defineProperty(exports, "BindingModeBehavior", { enumerable: true, get: function () { return binding_mode_1.BindingModeBehavior; } });
    Object.defineProperty(exports, "OneTimeBindingBehavior", { enumerable: true, get: function () { return binding_mode_1.OneTimeBindingBehavior; } });
    Object.defineProperty(exports, "ToViewBindingBehavior", { enumerable: true, get: function () { return binding_mode_1.ToViewBindingBehavior; } });
    Object.defineProperty(exports, "FromViewBindingBehavior", { enumerable: true, get: function () { return binding_mode_1.FromViewBindingBehavior; } });
    Object.defineProperty(exports, "TwoWayBindingBehavior", { enumerable: true, get: function () { return binding_mode_1.TwoWayBindingBehavior; } });
    var debounce_1 = require("./resources/binding-behaviors/debounce");
    Object.defineProperty(exports, "DebounceBindingBehavior", { enumerable: true, get: function () { return debounce_1.DebounceBindingBehavior; } });
    var signals_1 = require("./resources/binding-behaviors/signals");
    Object.defineProperty(exports, "SignalBindingBehavior", { enumerable: true, get: function () { return signals_1.SignalBindingBehavior; } });
    var throttle_1 = require("./resources/binding-behaviors/throttle");
    Object.defineProperty(exports, "ThrottleBindingBehavior", { enumerable: true, get: function () { return throttle_1.ThrottleBindingBehavior; } });
    var custom_attribute_1 = require("./resources/custom-attribute");
    Object.defineProperty(exports, "customAttribute", { enumerable: true, get: function () { return custom_attribute_1.customAttribute; } });
    Object.defineProperty(exports, "CustomAttribute", { enumerable: true, get: function () { return custom_attribute_1.CustomAttribute; } });
    Object.defineProperty(exports, "CustomAttributeDefinition", { enumerable: true, get: function () { return custom_attribute_1.CustomAttributeDefinition; } });
    Object.defineProperty(exports, "templateController", { enumerable: true, get: function () { return custom_attribute_1.templateController; } });
    var flags_1 = require("./resources/custom-attributes/flags");
    Object.defineProperty(exports, "FrequentMutations", { enumerable: true, get: function () { return flags_1.FrequentMutations; } });
    Object.defineProperty(exports, "InfrequentMutations", { enumerable: true, get: function () { return flags_1.InfrequentMutations; } });
    Object.defineProperty(exports, "ObserveShallow", { enumerable: true, get: function () { return flags_1.ObserveShallow; } });
    var if_1 = require("./resources/custom-attributes/if");
    Object.defineProperty(exports, "If", { enumerable: true, get: function () { return if_1.If; } });
    Object.defineProperty(exports, "Else", { enumerable: true, get: function () { return if_1.Else; } });
    var repeat_1 = require("./resources/custom-attributes/repeat");
    Object.defineProperty(exports, "Repeat", { enumerable: true, get: function () { return repeat_1.Repeat; } });
    var with_1 = require("./resources/custom-attributes/with");
    Object.defineProperty(exports, "With", { enumerable: true, get: function () { return with_1.With; } });
    var au_slot_1 = require("./resources/custom-elements/au-slot");
    Object.defineProperty(exports, "AuSlot", { enumerable: true, get: function () { return au_slot_1.AuSlot; } });
    Object.defineProperty(exports, "IProjections", { enumerable: true, get: function () { return au_slot_1.IProjections; } });
    Object.defineProperty(exports, "SlotInfo", { enumerable: true, get: function () { return au_slot_1.SlotInfo; } });
    Object.defineProperty(exports, "AuSlotContentType", { enumerable: true, get: function () { return au_slot_1.AuSlotContentType; } });
    Object.defineProperty(exports, "RegisteredProjections", { enumerable: true, get: function () { return au_slot_1.RegisteredProjections; } });
    Object.defineProperty(exports, "IProjectionProvider", { enumerable: true, get: function () { return au_slot_1.IProjectionProvider; } });
    Object.defineProperty(exports, "ProjectionContext", { enumerable: true, get: function () { return au_slot_1.ProjectionContext; } });
    var custom_element_1 = require("./resources/custom-element");
    Object.defineProperty(exports, "containerless", { enumerable: true, get: function () { return custom_element_1.containerless; } });
    Object.defineProperty(exports, "customElement", { enumerable: true, get: function () { return custom_element_1.customElement; } });
    Object.defineProperty(exports, "CustomElement", { enumerable: true, get: function () { return custom_element_1.CustomElement; } });
    Object.defineProperty(exports, "CustomElementDefinition", { enumerable: true, get: function () { return custom_element_1.CustomElementDefinition; } });
    Object.defineProperty(exports, "IProjectorLocator", { enumerable: true, get: function () { return custom_element_1.IProjectorLocator; } });
    Object.defineProperty(exports, "useShadowDOM", { enumerable: true, get: function () { return custom_element_1.useShadowDOM; } });
    var value_converter_1 = require("./resources/value-converter");
    Object.defineProperty(exports, "ValueConverter", { enumerable: true, get: function () { return value_converter_1.ValueConverter; } });
    Object.defineProperty(exports, "ValueConverterDefinition", { enumerable: true, get: function () { return value_converter_1.ValueConverterDefinition; } });
    Object.defineProperty(exports, "valueConverter", { enumerable: true, get: function () { return value_converter_1.valueConverter; } });
    var sanitize_1 = require("./resources/value-converters/sanitize");
    Object.defineProperty(exports, "ISanitizer", { enumerable: true, get: function () { return sanitize_1.ISanitizer; } });
    Object.defineProperty(exports, "SanitizeValueConverter", { enumerable: true, get: function () { return sanitize_1.SanitizeValueConverter; } });
    var view_1 = require("./resources/value-converters/view");
    Object.defineProperty(exports, "ViewValueConverter", { enumerable: true, get: function () { return view_1.ViewValueConverter; } });
    var scheduler_1 = require("@aurelia/scheduler");
    Object.defineProperty(exports, "Now", { enumerable: true, get: function () { return scheduler_1.Now; } });
    Object.defineProperty(exports, "IScheduler", { enumerable: true, get: function () { return scheduler_1.IScheduler; } });
    Object.defineProperty(exports, "Task", { enumerable: true, get: function () { return scheduler_1.Task; } });
    Object.defineProperty(exports, "TaskAbortError", { enumerable: true, get: function () { return scheduler_1.TaskAbortError; } });
    Object.defineProperty(exports, "TaskQueue", { enumerable: true, get: function () { return scheduler_1.TaskQueue; } });
    Object.defineProperty(exports, "TaskQueuePriority", { enumerable: true, get: function () { return scheduler_1.TaskQueuePriority; } });
    var bindable_1 = require("./templating/bindable");
    Object.defineProperty(exports, "bindable", { enumerable: true, get: function () { return bindable_1.bindable; } });
    Object.defineProperty(exports, "BindableDefinition", { enumerable: true, get: function () { return bindable_1.BindableDefinition; } });
    Object.defineProperty(exports, "Bindable", { enumerable: true, get: function () { return bindable_1.Bindable; } });
    var children_1 = require("./templating/children");
    Object.defineProperty(exports, "ChildrenDefinition", { enumerable: true, get: function () { return children_1.ChildrenDefinition; } });
    Object.defineProperty(exports, "Children", { enumerable: true, get: function () { return children_1.Children; } });
    Object.defineProperty(exports, "children", { enumerable: true, get: function () { return children_1.children; } });
    Object.defineProperty(exports, "ChildrenObserver", { enumerable: true, get: function () { return children_1.ChildrenObserver; } });
    // These exports are temporary until we have a proper way to unit test them
    var controller_1 = require("./templating/controller");
    Object.defineProperty(exports, "Controller", { enumerable: true, get: function () { return controller_1.Controller; } });
    Object.defineProperty(exports, "isCustomElementController", { enumerable: true, get: function () { return controller_1.isCustomElementController; } });
    Object.defineProperty(exports, "isCustomElementViewModel", { enumerable: true, get: function () { return controller_1.isCustomElementViewModel; } });
    var view_2 = require("./templating/view");
    Object.defineProperty(exports, "ViewFactory", { enumerable: true, get: function () { return view_2.ViewFactory; } });
    Object.defineProperty(exports, "IViewLocator", { enumerable: true, get: function () { return view_2.IViewLocator; } });
    Object.defineProperty(exports, "ViewLocator", { enumerable: true, get: function () { return view_2.ViewLocator; } });
    Object.defineProperty(exports, "view", { enumerable: true, get: function () { return view_2.view; } });
    Object.defineProperty(exports, "Views", { enumerable: true, get: function () { return view_2.Views; } });
    var aurelia_1 = require("./aurelia");
    Object.defineProperty(exports, "Aurelia", { enumerable: true, get: function () { return aurelia_1.Aurelia; } });
    Object.defineProperty(exports, "IAurelia", { enumerable: true, get: function () { return aurelia_1.IAurelia; } });
    Object.defineProperty(exports, "IDOMInitializer", { enumerable: true, get: function () { return aurelia_1.IDOMInitializer; } });
    Object.defineProperty(exports, "CompositionRoot", { enumerable: true, get: function () { return aurelia_1.CompositionRoot; } });
    Object.defineProperty(exports, "ICompositionRoot", { enumerable: true, get: function () { return aurelia_1.ICompositionRoot; } });
    var configuration_1 = require("./configuration");
    Object.defineProperty(exports, "RefAttributePatternRegistration", { enumerable: true, get: function () { return configuration_1.RefAttributePatternRegistration; } });
    Object.defineProperty(exports, "DotSeparatedAttributePatternRegistration", { enumerable: true, get: function () { return configuration_1.DotSeparatedAttributePatternRegistration; } });
    Object.defineProperty(exports, "DefaultBindingSyntax", { enumerable: true, get: function () { return configuration_1.DefaultBindingSyntax; } });
    Object.defineProperty(exports, "AtPrefixedTriggerAttributePatternRegistration", { enumerable: true, get: function () { return configuration_1.AtPrefixedTriggerAttributePatternRegistration; } });
    Object.defineProperty(exports, "ColonPrefixedBindAttributePatternRegistration", { enumerable: true, get: function () { return configuration_1.ColonPrefixedBindAttributePatternRegistration; } });
    Object.defineProperty(exports, "ShortHandBindingSyntax", { enumerable: true, get: function () { return configuration_1.ShortHandBindingSyntax; } });
    Object.defineProperty(exports, "CallBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.CallBindingCommandRegistration; } });
    Object.defineProperty(exports, "DefaultBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.DefaultBindingCommandRegistration; } });
    Object.defineProperty(exports, "ForBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.ForBindingCommandRegistration; } });
    Object.defineProperty(exports, "FromViewBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.FromViewBindingCommandRegistration; } });
    Object.defineProperty(exports, "OneTimeBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.OneTimeBindingCommandRegistration; } });
    Object.defineProperty(exports, "ToViewBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.ToViewBindingCommandRegistration; } });
    Object.defineProperty(exports, "TwoWayBindingCommandRegistration", { enumerable: true, get: function () { return configuration_1.TwoWayBindingCommandRegistration; } });
    Object.defineProperty(exports, "DefaultBindingLanguage", { enumerable: true, get: function () { return configuration_1.DefaultBindingLanguage; } });
    Object.defineProperty(exports, "IfRegistration", { enumerable: true, get: function () { return configuration_1.IfRegistration; } });
    Object.defineProperty(exports, "ElseRegistration", { enumerable: true, get: function () { return configuration_1.ElseRegistration; } });
    Object.defineProperty(exports, "RepeatRegistration", { enumerable: true, get: function () { return configuration_1.RepeatRegistration; } });
    Object.defineProperty(exports, "WithRegistration", { enumerable: true, get: function () { return configuration_1.WithRegistration; } });
    Object.defineProperty(exports, "SanitizeValueConverterRegistration", { enumerable: true, get: function () { return configuration_1.SanitizeValueConverterRegistration; } });
    Object.defineProperty(exports, "DebounceBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.DebounceBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "OneTimeBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.OneTimeBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "ToViewBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.ToViewBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "FromViewBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.FromViewBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "SignalBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.SignalBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "ThrottleBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.ThrottleBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "TwoWayBindingBehaviorRegistration", { enumerable: true, get: function () { return configuration_1.TwoWayBindingBehaviorRegistration; } });
    Object.defineProperty(exports, "RefBindingRendererRegistration", { enumerable: true, get: function () { return configuration_1.RefBindingRendererRegistration; } });
    Object.defineProperty(exports, "CallBindingRendererRegistration", { enumerable: true, get: function () { return configuration_1.CallBindingRendererRegistration; } });
    Object.defineProperty(exports, "CustomAttributeRendererRegistration", { enumerable: true, get: function () { return configuration_1.CustomAttributeRendererRegistration; } });
    Object.defineProperty(exports, "CustomElementRendererRegistration", { enumerable: true, get: function () { return configuration_1.CustomElementRendererRegistration; } });
    Object.defineProperty(exports, "InterpolationBindingRendererRegistration", { enumerable: true, get: function () { return configuration_1.InterpolationBindingRendererRegistration; } });
    Object.defineProperty(exports, "IteratorBindingRendererRegistration", { enumerable: true, get: function () { return configuration_1.IteratorBindingRendererRegistration; } });
    Object.defineProperty(exports, "LetElementRendererRegistration", { enumerable: true, get: function () { return configuration_1.LetElementRendererRegistration; } });
    Object.defineProperty(exports, "PropertyBindingRendererRegistration", { enumerable: true, get: function () { return configuration_1.PropertyBindingRendererRegistration; } });
    Object.defineProperty(exports, "SetPropertyRendererRegistration", { enumerable: true, get: function () { return configuration_1.SetPropertyRendererRegistration; } });
    Object.defineProperty(exports, "TemplateControllerRendererRegistration", { enumerable: true, get: function () { return configuration_1.TemplateControllerRendererRegistration; } });
    Object.defineProperty(exports, "DefaultResources", { enumerable: true, get: function () { return configuration_1.DefaultResources; } });
    Object.defineProperty(exports, "RuntimeConfiguration", { enumerable: true, get: function () { return configuration_1.RuntimeConfiguration; } });
    var definitions_1 = require("./definitions");
    Object.defineProperty(exports, "HooksDefinition", { enumerable: true, get: function () { return definitions_1.HooksDefinition; } });
    Object.defineProperty(exports, "isTargetedInstruction", { enumerable: true, get: function () { return definitions_1.isTargetedInstruction; } });
    Object.defineProperty(exports, "ITargetedInstruction", { enumerable: true, get: function () { return definitions_1.ITargetedInstruction; } });
    Object.defineProperty(exports, "TargetedInstructionType", { enumerable: true, get: function () { return definitions_1.TargetedInstructionType; } });
    Object.defineProperty(exports, "alias", { enumerable: true, get: function () { return definitions_1.alias; } });
    Object.defineProperty(exports, "registerAliases", { enumerable: true, get: function () { return definitions_1.registerAliases; } });
    var dom_1 = require("./dom");
    Object.defineProperty(exports, "DOM", { enumerable: true, get: function () { return dom_1.DOM; } });
    Object.defineProperty(exports, "INode", { enumerable: true, get: function () { return dom_1.INode; } });
    Object.defineProperty(exports, "IRenderLocation", { enumerable: true, get: function () { return dom_1.IRenderLocation; } });
    Object.defineProperty(exports, "IDOM", { enumerable: true, get: function () { return dom_1.IDOM; } });
    Object.defineProperty(exports, "NodeSequence", { enumerable: true, get: function () { return dom_1.NodeSequence; } });
    var flags_2 = require("./flags");
    Object.defineProperty(exports, "BindingMode", { enumerable: true, get: function () { return flags_2.BindingMode; } });
    Object.defineProperty(exports, "BindingStrategy", { enumerable: true, get: function () { return flags_2.BindingStrategy; } });
    Object.defineProperty(exports, "ExpressionKind", { enumerable: true, get: function () { return flags_2.ExpressionKind; } });
    Object.defineProperty(exports, "LifecycleFlags", { enumerable: true, get: function () { return flags_2.LifecycleFlags; } });
    var instructions_1 = require("./instructions");
    Object.defineProperty(exports, "CallBindingInstruction", { enumerable: true, get: function () { return instructions_1.CallBindingInstruction; } });
    Object.defineProperty(exports, "FromViewBindingInstruction", { enumerable: true, get: function () { return instructions_1.FromViewBindingInstruction; } });
    Object.defineProperty(exports, "HydrateAttributeInstruction", { enumerable: true, get: function () { return instructions_1.HydrateAttributeInstruction; } });
    Object.defineProperty(exports, "HydrateElementInstruction", { enumerable: true, get: function () { return instructions_1.HydrateElementInstruction; } });
    Object.defineProperty(exports, "HydrateTemplateController", { enumerable: true, get: function () { return instructions_1.HydrateTemplateController; } });
    Object.defineProperty(exports, "InterpolationInstruction", { enumerable: true, get: function () { return instructions_1.InterpolationInstruction; } });
    Object.defineProperty(exports, "IteratorBindingInstruction", { enumerable: true, get: function () { return instructions_1.IteratorBindingInstruction; } });
    Object.defineProperty(exports, "LetBindingInstruction", { enumerable: true, get: function () { return instructions_1.LetBindingInstruction; } });
    Object.defineProperty(exports, "LetElementInstruction", { enumerable: true, get: function () { return instructions_1.LetElementInstruction; } });
    Object.defineProperty(exports, "OneTimeBindingInstruction", { enumerable: true, get: function () { return instructions_1.OneTimeBindingInstruction; } });
    Object.defineProperty(exports, "RefBindingInstruction", { enumerable: true, get: function () { return instructions_1.RefBindingInstruction; } });
    Object.defineProperty(exports, "SetPropertyInstruction", { enumerable: true, get: function () { return instructions_1.SetPropertyInstruction; } });
    Object.defineProperty(exports, "ToViewBindingInstruction", { enumerable: true, get: function () { return instructions_1.ToViewBindingInstruction; } });
    Object.defineProperty(exports, "TwoWayBindingInstruction", { enumerable: true, get: function () { return instructions_1.TwoWayBindingInstruction; } });
    var lifecycle_1 = require("./lifecycle");
    Object.defineProperty(exports, "ViewModelKind", { enumerable: true, get: function () { return lifecycle_1.ViewModelKind; } });
    Object.defineProperty(exports, "ILifecycle", { enumerable: true, get: function () { return lifecycle_1.ILifecycle; } });
    Object.defineProperty(exports, "IController", { enumerable: true, get: function () { return lifecycle_1.IController; } });
    Object.defineProperty(exports, "IViewFactory", { enumerable: true, get: function () { return lifecycle_1.IViewFactory; } });
    Object.defineProperty(exports, "MountStrategy", { enumerable: true, get: function () { return lifecycle_1.MountStrategy; } });
    var render_context_1 = require("./templating/render-context");
    Object.defineProperty(exports, "getRenderContext", { enumerable: true, get: function () { return render_context_1.getRenderContext; } });
    Object.defineProperty(exports, "isRenderContext", { enumerable: true, get: function () { return render_context_1.isRenderContext; } });
    var app_task_1 = require("./app-task");
    Object.defineProperty(exports, "AppTask", { enumerable: true, get: function () { return app_task_1.AppTask; } });
    Object.defineProperty(exports, "IAppTask", { enumerable: true, get: function () { return app_task_1.IAppTask; } });
    var observation_1 = require("./observation");
    Object.defineProperty(exports, "AccessorType", { enumerable: true, get: function () { return observation_1.AccessorType; } });
    Object.defineProperty(exports, "CollectionKind", { enumerable: true, get: function () { return observation_1.CollectionKind; } });
    Object.defineProperty(exports, "DelegationStrategy", { enumerable: true, get: function () { return observation_1.DelegationStrategy; } });
    Object.defineProperty(exports, "isIndexMap", { enumerable: true, get: function () { return observation_1.isIndexMap; } });
    Object.defineProperty(exports, "copyIndexMap", { enumerable: true, get: function () { return observation_1.copyIndexMap; } });
    Object.defineProperty(exports, "cloneIndexMap", { enumerable: true, get: function () { return observation_1.cloneIndexMap; } });
    Object.defineProperty(exports, "createIndexMap", { enumerable: true, get: function () { return observation_1.createIndexMap; } });
    var renderer_1 = require("./renderer");
    Object.defineProperty(exports, "applyBindingBehavior", { enumerable: true, get: function () { return renderer_1.applyBindingBehavior; } });
    Object.defineProperty(exports, "IInstructionRenderer", { enumerable: true, get: function () { return renderer_1.IInstructionRenderer; } });
    Object.defineProperty(exports, "IRenderer", { enumerable: true, get: function () { return renderer_1.IRenderer; } });
    Object.defineProperty(exports, "ITemplateCompiler", { enumerable: true, get: function () { return renderer_1.ITemplateCompiler; } });
    Object.defineProperty(exports, "instructionRenderer", { enumerable: true, get: function () { return renderer_1.instructionRenderer; } });
    Object.defineProperty(exports, "ensureExpression", { enumerable: true, get: function () { return renderer_1.ensureExpression; } });
    var resource_model_1 = require("./resource-model");
    Object.defineProperty(exports, "ResourceModel", { enumerable: true, get: function () { return resource_model_1.ResourceModel; } });
    Object.defineProperty(exports, "BindableInfo", { enumerable: true, get: function () { return resource_model_1.BindableInfo; } });
    Object.defineProperty(exports, "ElementInfo", { enumerable: true, get: function () { return resource_model_1.ElementInfo; } });
    Object.defineProperty(exports, "AttrInfo", { enumerable: true, get: function () { return resource_model_1.AttrInfo; } });
    var semantic_model_1 = require("./semantic-model");
    Object.defineProperty(exports, "BindingSymbol", { enumerable: true, get: function () { return semantic_model_1.BindingSymbol; } });
    Object.defineProperty(exports, "CustomAttributeSymbol", { enumerable: true, get: function () { return semantic_model_1.CustomAttributeSymbol; } });
    Object.defineProperty(exports, "CustomElementSymbol", { enumerable: true, get: function () { return semantic_model_1.CustomElementSymbol; } });
    Object.defineProperty(exports, "LetElementSymbol", { enumerable: true, get: function () { return semantic_model_1.LetElementSymbol; } });
    Object.defineProperty(exports, "PlainAttributeSymbol", { enumerable: true, get: function () { return semantic_model_1.PlainAttributeSymbol; } });
    Object.defineProperty(exports, "PlainElementSymbol", { enumerable: true, get: function () { return semantic_model_1.PlainElementSymbol; } });
    Object.defineProperty(exports, "SymbolFlags", { enumerable: true, get: function () { return semantic_model_1.SymbolFlags; } });
    Object.defineProperty(exports, "TemplateControllerSymbol", { enumerable: true, get: function () { return semantic_model_1.TemplateControllerSymbol; } });
    Object.defineProperty(exports, "TextSymbol", { enumerable: true, get: function () { return semantic_model_1.TextSymbol; } });
    Object.defineProperty(exports, "ProjectionSymbol", { enumerable: true, get: function () { return semantic_model_1.ProjectionSymbol; } });
});
//# sourceMappingURL=index.js.map
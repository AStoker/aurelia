(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./di", "@aurelia/metadata", "./logger", "./path", "./platform", "./reporter", "./profiler", "./resource", "./eventaggregator", "./functions"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var di_1 = require("./di");
    Object.defineProperty(exports, "all", { enumerable: true, get: function () { return di_1.all; } });
    Object.defineProperty(exports, "DI", { enumerable: true, get: function () { return di_1.DI; } });
    Object.defineProperty(exports, "IContainer", { enumerable: true, get: function () { return di_1.IContainer; } });
    Object.defineProperty(exports, "inject", { enumerable: true, get: function () { return di_1.inject; } });
    Object.defineProperty(exports, "IServiceLocator", { enumerable: true, get: function () { return di_1.IServiceLocator; } });
    Object.defineProperty(exports, "lazy", { enumerable: true, get: function () { return di_1.lazy; } });
    Object.defineProperty(exports, "optional", { enumerable: true, get: function () { return di_1.optional; } });
    Object.defineProperty(exports, "ignore", { enumerable: true, get: function () { return di_1.ignore; } });
    Object.defineProperty(exports, "Registration", { enumerable: true, get: function () { return di_1.Registration; } });
    Object.defineProperty(exports, "singleton", { enumerable: true, get: function () { return di_1.singleton; } });
    Object.defineProperty(exports, "transient", { enumerable: true, get: function () { return di_1.transient; } });
    Object.defineProperty(exports, "InstanceProvider", { enumerable: true, get: function () { return di_1.InstanceProvider; } });
    Object.defineProperty(exports, "newInstanceForScope", { enumerable: true, get: function () { return di_1.newInstanceForScope; } });
    Object.defineProperty(exports, "newInstanceOf", { enumerable: true, get: function () { return di_1.newInstanceOf; } });
    Object.defineProperty(exports, "DefaultContainerConfiguration", { enumerable: true, get: function () { return di_1.DefaultContainerConfiguration; } });
    Object.defineProperty(exports, "DefaultResolver", { enumerable: true, get: function () { return di_1.DefaultResolver; } });
    var metadata_1 = require("@aurelia/metadata");
    Object.defineProperty(exports, "metadata", { enumerable: true, get: function () { return metadata_1.metadata; } });
    Object.defineProperty(exports, "Metadata", { enumerable: true, get: function () { return metadata_1.Metadata; } });
    Object.defineProperty(exports, "isNullOrUndefined", { enumerable: true, get: function () { return metadata_1.isNullOrUndefined; } });
    Object.defineProperty(exports, "isObject", { enumerable: true, get: function () { return metadata_1.isObject; } });
    Object.defineProperty(exports, "applyMetadataPolyfill", { enumerable: true, get: function () { return metadata_1.applyMetadataPolyfill; } });
    var logger_1 = require("./logger");
    Object.defineProperty(exports, "ColorOptions", { enumerable: true, get: function () { return logger_1.ColorOptions; } });
    Object.defineProperty(exports, "ILogConfig", { enumerable: true, get: function () { return logger_1.ILogConfig; } });
    Object.defineProperty(exports, "ILogEventFactory", { enumerable: true, get: function () { return logger_1.ILogEventFactory; } });
    Object.defineProperty(exports, "ISink", { enumerable: true, get: function () { return logger_1.ISink; } });
    Object.defineProperty(exports, "ILogger", { enumerable: true, get: function () { return logger_1.ILogger; } });
    Object.defineProperty(exports, "LogConfig", { enumerable: true, get: function () { return logger_1.LogConfig; } });
    Object.defineProperty(exports, "DefaultLogEvent", { enumerable: true, get: function () { return logger_1.DefaultLogEvent; } });
    Object.defineProperty(exports, "DefaultLogEventFactory", { enumerable: true, get: function () { return logger_1.DefaultLogEventFactory; } });
    Object.defineProperty(exports, "DefaultLogger", { enumerable: true, get: function () { return logger_1.DefaultLogger; } });
    Object.defineProperty(exports, "ConsoleSink", { enumerable: true, get: function () { return logger_1.ConsoleSink; } });
    Object.defineProperty(exports, "LoggerConfiguration", { enumerable: true, get: function () { return logger_1.LoggerConfiguration; } });
    Object.defineProperty(exports, "format", { enumerable: true, get: function () { return logger_1.format; } });
    Object.defineProperty(exports, "sink", { enumerable: true, get: function () { return logger_1.sink; } });
    var path_1 = require("./path");
    Object.defineProperty(exports, "relativeToFile", { enumerable: true, get: function () { return path_1.relativeToFile; } });
    Object.defineProperty(exports, "join", { enumerable: true, get: function () { return path_1.join; } });
    var platform_1 = require("./platform");
    Object.defineProperty(exports, "PLATFORM", { enumerable: true, get: function () { return platform_1.PLATFORM; } });
    var reporter_1 = require("./reporter");
    Object.defineProperty(exports, "Reporter", { enumerable: true, get: function () { return reporter_1.Reporter; } });
    Object.defineProperty(exports, "Tracer", { enumerable: true, get: function () { return reporter_1.Tracer; } });
    Object.defineProperty(exports, "LogLevel", { enumerable: true, get: function () { return reporter_1.LogLevel; } });
    var profiler_1 = require("./profiler");
    Object.defineProperty(exports, "Profiler", { enumerable: true, get: function () { return profiler_1.Profiler; } });
    var resource_1 = require("./resource");
    Object.defineProperty(exports, "Protocol", { enumerable: true, get: function () { return resource_1.Protocol; } });
    Object.defineProperty(exports, "fromAnnotationOrDefinitionOrTypeOrDefault", { enumerable: true, get: function () { return resource_1.fromAnnotationOrDefinitionOrTypeOrDefault; } });
    Object.defineProperty(exports, "fromAnnotationOrTypeOrDefault", { enumerable: true, get: function () { return resource_1.fromAnnotationOrTypeOrDefault; } });
    Object.defineProperty(exports, "fromDefinitionOrDefault", { enumerable: true, get: function () { return resource_1.fromDefinitionOrDefault; } });
    var eventaggregator_1 = require("./eventaggregator");
    Object.defineProperty(exports, "EventAggregator", { enumerable: true, get: function () { return eventaggregator_1.EventAggregator; } });
    Object.defineProperty(exports, "IEventAggregator", { enumerable: true, get: function () { return eventaggregator_1.IEventAggregator; } });
    var functions_1 = require("./functions");
    Object.defineProperty(exports, "isArrayIndex", { enumerable: true, get: function () { return functions_1.isArrayIndex; } });
    Object.defineProperty(exports, "camelCase", { enumerable: true, get: function () { return functions_1.camelCase; } });
    Object.defineProperty(exports, "kebabCase", { enumerable: true, get: function () { return functions_1.kebabCase; } });
    Object.defineProperty(exports, "pascalCase", { enumerable: true, get: function () { return functions_1.pascalCase; } });
    Object.defineProperty(exports, "toArray", { enumerable: true, get: function () { return functions_1.toArray; } });
    Object.defineProperty(exports, "nextId", { enumerable: true, get: function () { return functions_1.nextId; } });
    Object.defineProperty(exports, "resetId", { enumerable: true, get: function () { return functions_1.resetId; } });
    Object.defineProperty(exports, "compareNumber", { enumerable: true, get: function () { return functions_1.compareNumber; } });
    Object.defineProperty(exports, "mergeDistinct", { enumerable: true, get: function () { return functions_1.mergeDistinct; } });
    Object.defineProperty(exports, "isNumberOrBigInt", { enumerable: true, get: function () { return functions_1.isNumberOrBigInt; } });
    Object.defineProperty(exports, "isStringOrDate", { enumerable: true, get: function () { return functions_1.isStringOrDate; } });
    Object.defineProperty(exports, "bound", { enumerable: true, get: function () { return functions_1.bound; } });
    Object.defineProperty(exports, "mergeArrays", { enumerable: true, get: function () { return functions_1.mergeArrays; } });
    Object.defineProperty(exports, "mergeObjects", { enumerable: true, get: function () { return functions_1.mergeObjects; } });
    Object.defineProperty(exports, "firstDefined", { enumerable: true, get: function () { return functions_1.firstDefined; } });
    Object.defineProperty(exports, "getPrototypeChain", { enumerable: true, get: function () { return functions_1.getPrototypeChain; } });
    Object.defineProperty(exports, "isNativeFunction", { enumerable: true, get: function () { return functions_1.isNativeFunction; } });
    Object.defineProperty(exports, "onResolve", { enumerable: true, get: function () { return functions_1.onResolve; } });
    Object.defineProperty(exports, "resolveAll", { enumerable: true, get: function () { return functions_1.resolveAll; } });
});
//# sourceMappingURL=index.js.map